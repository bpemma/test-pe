@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
.text
	.align	2, 0
	.globl	_execve_r
	.type	 _execve_r,function
	.thumb_func
_execve_r:
	push	{r4, r5, lr}
	add	r5, r0, #0
	add	r0, r1, #0
	add	r1, r2, #0
	add	r2, r3, #0
	ldr	r4, .L4
	mov	r3, #0
	str	r3, [r4]
	bl	_execve
	add	r1, r0, #0
	mov	r0, #1
	neg	r0, r0
	cmp	r1, r0
	bne	.L3	@cond_branch
	ldr	r0, [r4]
	cmp	r0, #0
	beq	.L3	@cond_branch
	str	r0, [r5]
.L3:
	add	r0, r1, #0
	pop	{r4, r5, pc}
.L5:
	.align	2, 0
.L4:
	.word	errno
.Lfe1:
	.size	 _execve_r,.Lfe1-_execve_r
	.align	2, 0
	.globl	_fork_r
	.type	 _fork_r,function
	.thumb_func
_fork_r:
	push	{r4, r5, lr}
	add	r5, r0, #0
	ldr	r4, .L8
	mov	r0, #0
	str	r0, [r4]
	bl	_fork
	add	r1, r0, #0
	mov	r0, #1
	neg	r0, r0
	cmp	r1, r0
	bne	.L7	@cond_branch
	ldr	r0, [r4]
	cmp	r0, #0
	beq	.L7	@cond_branch
	str	r0, [r5]
.L7:
	add	r0, r1, #0
	pop	{r4, r5, pc}
.L9:
	.align	2, 0
.L8:
	.word	errno
.Lfe2:
	.size	 _fork_r,.Lfe2-_fork_r
	.align	2, 0
	.globl	_wait_r
	.type	 _wait_r,function
	.thumb_func
_wait_r:
	push	{r4, r5, lr}
	add	r5, r0, #0
	add	r0, r1, #0
	ldr	r4, .L12
	mov	r1, #0
	str	r1, [r4]
	bl	_wait
	add	r1, r0, #0
	mov	r0, #1
	neg	r0, r0
	cmp	r1, r0
	bne	.L11	@cond_branch
	ldr	r0, [r4]
	cmp	r0, #0
	beq	.L11	@cond_branch
	str	r0, [r5]
.L11:
	add	r0, r1, #0
	pop	{r4, r5, pc}
.L13:
	.align	2, 0
.L12:
	.word	errno
.Lfe3:
	.size	 _wait_r,.Lfe3-_wait_r
.text
	.align	2, 0
