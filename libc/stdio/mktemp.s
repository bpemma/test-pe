@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
.text
	.align	2, 0
	.type	 _gettemp,function
	.thumb_func
_gettemp:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #-60
	add	r6, r0, #0
	add	r7, r1, #0
	mov	r8, r2
	bl	_getpid_r
	add	r5, r0, #0
	add	r4, r7, #0
	b	.L44
.L6:
	add	r4, r4, #1
.L44:
	ldrb	r0, [r4]
	cmp	r0, #0
	bne	.L6	@cond_branch
	sub	r4, r4, #1
	ldrb	r0, [r4]
	cmp	r0, #88
	bne	.L39	@cond_branch
.L10:
	add	r0, r5, #0
	mov	r1, #10
	bl	__umodsi3
	add	r0, r0, #48
	strb	r0, [r4]
	add	r0, r5, #0
	mov	r1, #10
	bl	__udivsi3
	add	r5, r0, #0
	sub	r4, r4, #1
	ldrb	r1, [r4]
	cmp	r1, #88
	beq	.L10	@cond_branch
.L39:
	add	r0, r4, #1
	mov	r9, r0
	cmp	r4, r7
	bls	.L20	@cond_branch
.L15:
	ldrb	r5, [r4]
	cmp	r5, #47
	bne	.L14	@cond_branch
	mov	r0, #0
	strb	r0, [r4]
	add	r0, r6, #0
	add	r1, r7, #0
	mov	r2, sp
	bl	_stat_r
	cmp	r0, #0
	bne	.L40	@cond_branch
	ldr	r0, [sp, #4]
	mov	r1, #128
	lsl	r1, r1, #7
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L41	@cond_branch
	strb	r5, [r4]
	b	.L20
.L14:
	sub	r4, r4, #1
	cmp	r4, r7
	bhi	.L15	@cond_branch
.L20:
	mov	r1, r8
	cmp	r1, #0
	beq	.L23	@cond_branch
	ldr	r2, .L45
	mov	r3, #192
	lsl	r3, r3, #1
	add	r0, r6, #0
	add	r1, r7, #0
	bl	_open_r
	mov	r1, r8
	str	r0, [r1]
	cmp	r0, #0
	blt	.L24	@cond_branch
	mov	r0, #1
	b	.L38
.L46:
	.align	2, 0
.L45:
	.word	2562
.L43:
	mov	r0, #97
	strb	r0, [r4]
	b	.L20
.L24:
	ldr	r0, [r6]
	cmp	r0, #17
	beq	.L26	@cond_branch
	b	.L40
.L23:
	add	r0, r6, #0
	add	r1, r7, #0
	mov	r2, sp
	bl	_stat_r
	cmp	r0, #0
	beq	.L26	@cond_branch
	mov	r1, #0
	ldr	r0, [r6]
	cmp	r0, #2
	bne	.L28	@cond_branch
	mov	r1, #1
.L28:
	add	r0, r1, #0
	b	.L38
.L26:
	mov	r4, r9
	mov	r2, #97
	ldr	r3, .L47
	mov	r0, #4
.L29:
	ldrb	r1, [r4]
	cmp	r1, #0
	beq	.L42	@cond_branch
	cmp	r1, #122
	bne	.L33	@cond_branch
	strb	r2, [r4]
	add	r4, r4, #1
	b	.L29
.L48:
	.align	2, 0
.L47:
	.word	_ctype_+1
.L33:
	ldrb	r2, [r4]
	add	r1, r2, r3
	ldrb	r1, [r1]
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L43	@cond_branch
	add	r0, r2, #1
	strb	r0, [r4]
	b	.L20
.L41:
	mov	r0, #20
	str	r0, [r6]
.L42:
.L40:
	mov	r0, #0
.L38:
	add	sp, sp, #60
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7, pc}
.Lfe1:
	.size	 _gettemp,.Lfe1-_gettemp
	.align	2, 0
	.globl	_mkstemp_r
	.type	 _mkstemp_r,function
	.thumb_func
_mkstemp_r:
	push	{lr}
	add	sp, sp, #-4
	mov	r2, sp
	bl	_gettemp
	mov	r1, #1
	neg	r1, r1
	cmp	r0, #0
	beq	.L50	@cond_branch
	ldr	r1, [sp]
.L50:
	add	r0, r1, #0
	add	sp, sp, #4
	pop	{pc}
.Lfe2:
	.size	 _mkstemp_r,.Lfe2-_mkstemp_r
	.align	2, 0
	.globl	_mktemp_r
	.type	 _mktemp_r,function
	.thumb_func
_mktemp_r:
	push	{r4, lr}
	add	r4, r1, #0
	mov	r2, #0
	bl	_gettemp
	mov	r1, #0
	cmp	r0, #0
	beq	.L53	@cond_branch
	add	r1, r4, #0
.L53:
	add	r0, r1, #0
	pop	{r4, pc}
.Lfe3:
	.size	 _mktemp_r,.Lfe3-_mktemp_r
	.align	2, 0
	.globl	mkstemp
	.type	 mkstemp,function
	.thumb_func
mkstemp:
	push	{lr}
	add	sp, sp, #-4
	add	r1, r0, #0
	ldr	r0, .L58
	ldr	r0, [r0]
	mov	r2, sp
	bl	_gettemp
	mov	r1, #1
	neg	r1, r1
	cmp	r0, #0
	beq	.L56	@cond_branch
	ldr	r1, [sp]
.L56:
	add	r0, r1, #0
	add	sp, sp, #4
	pop	{pc}
.L59:
	.align	2, 0
.L58:
	.word	_impure_ptr
.Lfe4:
	.size	 mkstemp,.Lfe4-mkstemp
	.align	2, 0
	.globl	mktemp
	.type	 mktemp,function
	.thumb_func
mktemp:
	push	{r4, lr}
	add	r4, r0, #0
	ldr	r0, .L63
	ldr	r0, [r0]
	add	r1, r4, #0
	mov	r2, #0
	bl	_gettemp
	mov	r1, #0
	cmp	r0, #0
	beq	.L61	@cond_branch
	add	r1, r4, #0
.L61:
	add	r0, r1, #0
	pop	{r4, pc}
.L64:
	.align	2, 0
.L63:
	.word	_impure_ptr
.Lfe5:
	.size	 mktemp,.Lfe5-mktemp
.text
	.align	2, 0
