@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
.text
	.align	2, 0
	.globl	fclose
	.type	 fclose,function
	.thumb_func
fclose:
	push	{r4, r5, lr}
	add	r4, r0, #0
	cmp	r4, #0
	beq	.L20	@cond_branch
	ldr	r0, [r4, #84]
	cmp	r0, #0
	bne	.L7	@cond_branch
	ldr	r0, .L21
	ldr	r0, [r0]
	str	r0, [r4, #84]
.L7:
	ldr	r1, [r4, #84]
	ldr	r0, [r1, #56]
	cmp	r0, #0
	bne	.L5	@cond_branch
	add	r0, r1, #0
	bl	__sinit
.L5:
	ldrh	r1, [r4, #12]
	mov	r2, #12
	ldrsh	r0, [r4, r2]
	cmp	r0, #0
	bne	.L11	@cond_branch
.L20:
	mov	r0, #0
	b	.L19
.L22:
	.align	2, 0
.L21:
	.word	_impure_ptr
.L11:
	mov	r0, #8
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L12	@cond_branch
	add	r0, r4, #0
	bl	fflush
	add	r5, r0, #0
	b	.L13
.L12:
	mov	r5, #0
.L13:
	ldr	r1, [r4, #44]
	cmp	r1, #0
	beq	.L14	@cond_branch
	ldr	r0, [r4, #28]
	bl	_call_via_r1
	cmp	r0, #0
	bge	.L14	@cond_branch
	mov	r5, #1
	neg	r5, r5
.L14:
	mov	r0, #128
	ldrh	r1, [r4, #12]
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L15	@cond_branch
	ldr	r0, [r4, #84]
	ldr	r1, [r4, #16]
	bl	_free_r
.L15:
	ldr	r1, [r4, #48]
	cmp	r1, #0
	beq	.L16	@cond_branch
	add	r0, r4, #0
	add	r0, r0, #64
	cmp	r1, r0
	beq	.L17	@cond_branch
	ldr	r0, [r4, #84]
	bl	_free_r
.L17:
	mov	r0, #0
	str	r0, [r4, #48]
.L16:
	ldr	r1, [r4, #68]
	cmp	r1, #0
	beq	.L18	@cond_branch
	ldr	r0, [r4, #84]
	bl	_free_r
	mov	r0, #0
	str	r0, [r4, #68]
.L18:
	mov	r0, #0
	strh	r0, [r4, #12]
	add	r0, r5, #0
.L19:
	pop	{r4, r5, pc}
.Lfe1:
	.size	 fclose,.Lfe1-fclose
.text
	.align	2, 0
