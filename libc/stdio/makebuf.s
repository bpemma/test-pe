@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
.text
	.align	2, 0
	.globl	__smakebuf
	.type	 __smakebuf,function
	.thumb_func
__smakebuf:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-60
	add	r4, r0, #0
	mov	r0, #2
	ldrh	r1, [r4, #12]
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L13	@cond_branch
	mov	r2, #14
	ldrsh	r0, [r4, r2]
	cmp	r0, #0
	blt	.L5	@cond_branch
	ldr	r0, [r4, #84]
	mov	r2, #14
	ldrsh	r1, [r4, r2]
	mov	r2, sp
	bl	_fstat_r
	cmp	r0, #0
	bge	.L4	@cond_branch
.L5:
	mov	r7, #0
	mov	r6, #128
	lsl	r6, r6, #3
	mov	r1, #128
	lsl	r1, r1, #4
	add	r0, r1, #0
	ldrh	r2, [r4, #12]
	orr	r0, r0, r2
	b	.L14
.L4:
	mov	r7, #0
	ldr	r1, [sp, #4]
	mov	r0, #240
	lsl	r0, r0, #8
	and	r1, r1, r0
	mov	r0, #128
	lsl	r0, r0, #6
	cmp	r1, r0
	bne	.L7	@cond_branch
	mov	r7, #1
.L7:
	mov	r6, #128
	lsl	r6, r6, #3
	mov	r0, #128
	lsl	r0, r0, #8
	cmp	r1, r0
	bne	.L8	@cond_branch
	ldr	r1, [r4, #40]
	ldr	r0, .L15
	cmp	r1, r0
	bne	.L8	@cond_branch
	add	r0, r6, #0
	ldrh	r1, [r4, #12]
	orr	r0, r0, r1
	strh	r0, [r4, #12]
	str	r6, [r4, #76]
	b	.L6
.L16:
	.align	2, 0
.L15:
	.word	__sseek
.L8:
	mov	r2, #128
	lsl	r2, r2, #4
	add	r0, r2, #0
	ldrh	r1, [r4, #12]
	orr	r0, r0, r1
.L14:
	strh	r0, [r4, #12]
.L6:
	ldr	r0, [r4, #84]
	add	r1, r6, #0
	bl	_malloc_r
	add	r2, r0, #0
	cmp	r2, #0
	bne	.L10	@cond_branch
	mov	r0, #2
	ldrh	r2, [r4, #12]
	orr	r0, r0, r2
	strh	r0, [r4, #12]
.L13:
	add	r0, r4, #0
	add	r0, r0, #67
	str	r0, [r4]
	str	r0, [r4, #16]
	mov	r0, #1
	str	r0, [r4, #20]
	b	.L2
.L10:
	ldr	r1, [r4, #84]
	ldr	r0, .L17
	str	r0, [r1, #60]
	mov	r0, #128
	mov	r5, #0
	ldrh	r1, [r4, #12]
	orr	r0, r0, r1
	strh	r0, [r4, #12]
	str	r2, [r4]
	str	r2, [r4, #16]
	str	r6, [r4, #20]
	cmp	r7, #0
	beq	.L2	@cond_branch
	mov	r2, #14
	ldrsh	r0, [r4, r2]
	bl	isatty
	cmp	r0, #0
	beq	.L2	@cond_branch
	mov	r0, #1
	ldrh	r1, [r4, #12]
	orr	r0, r0, r1
	strh	r0, [r4, #12]
.L2:
	add	sp, sp, #60
	pop	{r4, r5, r6, r7, pc}
.L18:
	.align	2, 0
.L17:
	.word	_cleanup_r
.Lfe1:
	.size	 __smakebuf,.Lfe1-__smakebuf
.text
	.align	2, 0
