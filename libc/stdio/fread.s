@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
.text
	.align	2, 0
	.globl	fread
	.type	 fread,function
	.thumb_func
fread:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	r4, r0, #0
	mov	r9, r1
	mov	sl, r2
	add	r5, r3, #0
	mov	r6, sl
	mul	r6, r6, r1
	cmp	r6, #0
	bne	.L3	@cond_branch
	mov	r0, #0
	b	.L10
.L11:
	mov	r1, r8
	sub	r0, r1, r6
	mov	r1, r9
	bl	__udivsi3
	b	.L10
.L3:
	ldr	r0, [r5, #4]
	cmp	r0, #0
	bge	.L4	@cond_branch
	mov	r0, #0
	str	r0, [r5, #4]
.L4:
	mov	r8, r6
	add	r7, r4, #0
	b	.L12
.L7:
	ldr	r1, [r5]
	add	r0, r7, #0
	add	r2, r4, #0
	bl	memcpy
	ldr	r0, [r5]
	add	r0, r0, r4
	str	r0, [r5]
	add	r7, r7, r4
	sub	r6, r6, r4
	add	r0, r5, #0
	bl	__srefill
	cmp	r0, #0
	bne	.L11	@cond_branch
.L12:
	ldr	r4, [r5, #4]
	cmp	r6, r4
	bhi	.L7	@cond_branch
	ldr	r1, [r5]
	add	r0, r7, #0
	add	r2, r6, #0
	bl	memcpy
	ldr	r0, [r5, #4]
	sub	r0, r0, r6
	str	r0, [r5, #4]
	ldr	r0, [r5]
	add	r0, r0, r6
	str	r0, [r5]
	mov	r0, sl
.L10:
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7, pc}
.Lfe1:
	.size	 fread,.Lfe1-fread
.text
	.align	2, 0
