@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
.text
	.align	2, 0
	.globl	_fdopen_r
	.type	 _fdopen_r,function
	.thumb_func
_fdopen_r:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-4
	add	r6, r0, #0
	add	r7, r1, #0
	add	r1, r2, #0
	mov	r2, sp
	bl	__sflags
	add	r5, r0, #0
	cmp	r5, #0
	beq	.L10	@cond_branch
	add	r0, r7, #0
	mov	r1, #3
	mov	r2, #0
	bl	_fcntl
	add	r4, r0, #0
	cmp	r4, #0
	blt	.L10	@cond_branch
	mov	r2, #3
	add	r1, r4, #0
	and	r1, r1, r2
	cmp	r1, #2
	beq	.L5	@cond_branch
	ldr	r0, [sp]
	and	r0, r0, r2
	cmp	r1, r0
	beq	.L5	@cond_branch
	mov	r0, #9
	str	r0, [r6]
.L10:
	mov	r0, #0
	b	.L8
.L5:
	add	r0, r6, #0
	bl	__sfp
	add	r1, r0, #0
	cmp	r1, #0
	beq	.L10	@cond_branch
	strh	r5, [r1, #12]
	ldr	r0, [sp]
	mov	r2, #8
	and	r0, r0, r2
	cmp	r0, #0
	beq	.L7	@cond_branch
	and	r4, r4, r2
	cmp	r4, #0
	bne	.L7	@cond_branch
	add	r2, r2, #248
	add	r0, r2, #0
	orr	r5, r5, r0
	strh	r5, [r1, #12]
.L7:
	strh	r7, [r1, #14]
	str	r1, [r1, #28]
	ldr	r0, .L11
	str	r0, [r1, #32]
	ldr	r0, .L11+4
	str	r0, [r1, #36]
	ldr	r0, .L11+8
	str	r0, [r1, #40]
	ldr	r0, .L11+12
	str	r0, [r1, #44]
	add	r0, r1, #0
.L8:
	add	sp, sp, #4
	pop	{r4, r5, r6, r7, pc}
.L12:
	.align	2, 0
.L11:
	.word	__sread
	.word	__swrite
	.word	__sseek
	.word	__sclose
.Lfe1:
	.size	 _fdopen_r,.Lfe1-_fdopen_r
	.align	2, 0
	.globl	fdopen
	.type	 fdopen,function
	.thumb_func
fdopen:
	push	{lr}
	add	r3, r0, #0
	add	r2, r1, #0
	ldr	r0, .L14
	ldr	r0, [r0]
	add	r1, r3, #0
	bl	_fdopen_r
	pop	{pc}
.L15:
	.align	2, 0
.L14:
	.word	_impure_ptr
.Lfe2:
	.size	 fdopen,.Lfe2-fdopen
.text
	.align	2, 0
