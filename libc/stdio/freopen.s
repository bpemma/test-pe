@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
.text
	.align	2, 0
	.globl	freopen
	.type	 freopen,function
	.thumb_func
freopen:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #-4
	add	r7, r0, #0
	add	r5, r1, #0
	add	r4, r2, #0
	ldr	r0, [r4, #84]
	cmp	r0, #0
	bne	.L6	@cond_branch
	ldr	r0, .L22
	ldr	r0, [r0]
	str	r0, [r4, #84]
.L6:
	ldr	r1, [r4, #84]
	ldr	r0, [r1, #56]
	cmp	r0, #0
	bne	.L4	@cond_branch
	add	r0, r1, #0
	bl	__sinit
.L4:
	ldr	r6, [r4, #84]
	add	r0, r6, #0
	add	r1, r5, #0
	mov	r2, sp
	bl	__sflags
	mov	r9, r0
	cmp	r0, #0
	bne	.L10	@cond_branch
	add	r0, r4, #0
	bl	fclose
	b	.L21
.L23:
	.align	2, 0
.L22:
	.word	_impure_ptr
.L10:
	ldrh	r1, [r4, #12]
	mov	r2, #12
	ldrsh	r0, [r4, r2]
	cmp	r0, #0
	bne	.L11	@cond_branch
	mov	r0, #32
	strh	r0, [r4, #12]
	b	.L12
.L11:
	mov	r0, #8
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L13	@cond_branch
	add	r0, r4, #0
	bl	fflush
.L13:
	ldr	r1, [r4, #44]
	cmp	r1, #0
	beq	.L12	@cond_branch
	ldr	r0, [r4, #28]
	bl	_call_via_r1
.L12:
	ldr	r2, [sp]
	mov	r3, #219
	lsl	r3, r3, #1
	add	r0, r6, #0
	add	r1, r7, #0
	bl	_open_r
	add	r7, r0, #0
	ldr	r0, [r6]
	mov	r8, r0
	mov	r0, #128
	ldrh	r1, [r4, #12]
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L15	@cond_branch
	ldr	r1, [r4, #16]
	add	r0, r6, #0
	bl	_free_r
.L15:
	mov	r5, #0
	str	r5, [r4, #8]
	str	r5, [r4, #4]
	str	r5, [r4]
	str	r5, [r4, #16]
	str	r5, [r4, #20]
	str	r5, [r4, #24]
	ldr	r1, [r4, #48]
	cmp	r1, #0
	beq	.L16	@cond_branch
	add	r0, r4, #0
	add	r0, r0, #64
	cmp	r1, r0
	beq	.L17	@cond_branch
	ldr	r0, [r4, #84]
	bl	_free_r
.L17:
	str	r5, [r4, #48]
.L16:
	mov	r5, #0
	str	r5, [r4, #52]
	ldr	r1, [r4, #68]
	cmp	r1, #0
	beq	.L18	@cond_branch
	ldr	r0, [r4, #84]
	bl	_free_r
	str	r5, [r4, #68]
.L18:
	str	r5, [r4, #72]
	cmp	r7, #0
	blt	.L19	@cond_branch
	mov	r2, r9
	strh	r2, [r4, #12]
	strh	r7, [r4, #14]
	str	r4, [r4, #28]
	ldr	r0, .L24
	str	r0, [r4, #32]
	ldr	r0, .L24+4
	str	r0, [r4, #36]
	ldr	r0, .L24+8
	str	r0, [r4, #40]
	ldr	r0, .L24+12
	str	r0, [r4, #44]
	add	r0, r4, #0
	b	.L20
.L25:
	.align	2, 0
.L24:
	.word	__sread
	.word	__swrite
	.word	__sseek
	.word	__sclose
.L19:
	strh	r5, [r4, #12]
	mov	r0, r8
	str	r0, [r6]
.L21:
	mov	r0, #0
.L20:
	add	sp, sp, #4
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7, pc}
.Lfe1:
	.size	 freopen,.Lfe1-freopen
.text
	.align	2, 0
