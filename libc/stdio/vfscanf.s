@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section .rodata
	.align	1, 0
	.type	 basefix.3,object
	.size	 basefix.3,34
basefix.3:
	.short	10
	.short	1
	.short	2
	.short	3
	.short	4
	.short	5
	.short	6
	.short	7
	.short	8
	.short	9
	.short	10
	.short	11
	.short	12
	.short	13
	.short	14
	.short	15
	.short	16
.text
	.align	2, 0
	.globl	__svfscanf
	.type	 __svfscanf,function
	.thumb_func
__svfscanf:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	ldr	r4, .L244
	add	sp, sp, r4
	add	r5, r0, #0
	mov	r8, r2
	str	r1, [sp, #608]
	mov	r0, #0
	mov	sl, r0
	mov	r1, #0
	str	r1, [sp, #616]
	mov	r2, #0
	str	r2, [sp, #612]
	mov	r9, r2
.L3:
	ldr	r3, [sp, #608]
	ldrb	r2, [r3]
	add	r3, r3, #1
	str	r3, [sp, #608]
	cmp	r2, #0
	bne	.LCB28
	bl	.L26	@far jump
.LCB28:
	mov	r0, #1
	cmp	r0, #1
	bne	.L7	@cond_branch
	ldr	r1, .L244+4
	add	r1, r2, r1
	mov	r0, #8
	ldrb	r1, [r1]
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L7	@cond_branch
	b	.L8
.L245:
	.align	2, 0
.L244:
	.word	-624
	.word	_ctype_+1
.L12:
	mov	r1, #1
	add	r9, r9, r1
	ldr	r0, [r5, #4]
	sub	r0, r0, #1
	str	r0, [r5, #4]
	add	r0, r2, #1
	str	r0, [r5]
.L8:
	ldr	r0, [r5, #4]
	cmp	r0, #0
	bgt	.L11	@cond_branch
	add	r0, r5, #0
	bl	__srefill
	cmp	r0, #0
	beq	.LCB71
	bl	.L235	@far jump
.LCB71:
.L11:
	ldr	r2, [r5]
	ldr	r1, .L246
	ldrb	r3, [r2]
	add	r1, r3, r1
	mov	r0, #8
	ldrb	r1, [r1]
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L12	@cond_branch
	b	.L3
.L247:
	.align	2, 0
.L246:
	.word	_ctype_+1
.L7:
	cmp	r2, #37
	beq	.LCB97
	b	.L15	@long jump
.LCB97:
	mov	r3, #0
	mov	r7, #0
.L16:
	ldr	r0, [sp, #608]
	ldrb	r4, [r0]
	add	r0, r0, #1
	str	r0, [sp, #608]
	cmp	r4, #120
	bls	.LCB107
	b	.L66	@long jump
.LCB107:
	lsl	r0, r4, #2
	ldr	r1, .L248
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L249:
	.align	2, 0
.L248:
	.word	.L68
	.align	2, 0
	.align	2, 0
.L68:
	.word	.L65
	.word	.L66
	.word	.L66
	.word	.L66
	.word	.L66
	.word	.L66
	.word	.L66
	.word	.L66
	.word	.L66
	.word	.L66
	.word	.L66
	.word	.L66
	.word	.L66
	.word	.L66
	.word	.L66
	.word	.L66
	.word	.L66
	.word	.L66
	.word	.L66
	.word	.L66
	.word	.L66
	.word	.L66
	.word	.L66
	.word	.L66
	.word	.L66
	.word	.L66
	.word	.L66
	.word	.L66
	.word	.L66
	.word	.L66
	.word	.L66
	.word	.L66
	.word	.L66
	.word	.L66
	.word	.L66
	.word	.L66
	.word	.L66
	.word	.L15
	.word	.L66
	.word	.L66
	.word	.L66
	.word	.L66
	.word	.L28
	.word	.L66
	.word	.L66
	.word	.L66
	.word	.L66
	.word	.L66
	.word	.L41
	.word	.L41
	.word	.L41
	.word	.L41
	.word	.L41
	.word	.L41
	.word	.L41
	.word	.L41
	.word	.L41
	.word	.L41
	.word	.L66
	.word	.L66
	.word	.L66
	.word	.L66
	.word	.L66
	.word	.L66
	.word	.L66
	.word	.L66
	.word	.L66
	.word	.L66
	.word	.L42
	.word	.L54
	.word	.L66
	.word	.L54
	.word	.L66
	.word	.L66
	.word	.L66
	.word	.L66
	.word	.L30
	.word	.L66
	.word	.L66
	.word	.L45
	.word	.L66
	.word	.L66
	.word	.L66
	.word	.L66
	.word	.L66
	.word	.L66
	.word	.L66
	.word	.L66
	.word	.L49
	.word	.L66
	.word	.L66
	.word	.L56
	.word	.L66
	.word	.L66
	.word	.L66
	.word	.L66
	.word	.L66
	.word	.L66
	.word	.L66
	.word	.L57
	.word	.L43
	.word	.L54
	.word	.L54
	.word	.L54
	.word	.L31
	.word	.L44
	.word	.L66
	.word	.L66
	.word	.L29
	.word	.L66
	.word	.L59
	.word	.L46
	.word	.L58
	.word	.L66
	.word	.L66
	.word	.L55
	.word	.L66
	.word	.L47
	.word	.L66
	.word	.L66
	.word	.L49
.L15:
	ldr	r1, [sp, #608]
	mov	r2, #1
	sub	r4, r1, r2
	mov	r7, #0
	cmp	r7, #1
	blt	.LCB131
	b	.L3	@long jump
.LCB131:
.L22:
	ldr	r0, [r5, #4]
	cmp	r0, #0
	bgt	.L23	@cond_branch
	add	r0, r5, #0
	bl	__srefill
	cmp	r0, #0
	beq	.LCB142
	bl	.L24	@far jump
.LCB142:
.L23:
	ldr	r1, [r5]
	ldrb	r3, [r1]
	ldrb	r0, [r4]
	cmp	r3, r0
	beq	.LCB154
	bl	.L26	@far jump
.LCB154:
	ldr	r0, [r5, #4]
	sub	r0, r0, #1
	str	r0, [r5, #4]
	add	r0, r1, #1
	str	r0, [r5]
	mov	r1, #1
	add	r9, r9, r1
	add	r4, r4, #1
	add	r7, r7, #1
	cmp	r7, #1
	blt	.L22	@cond_branch
	b	.L3
.L28:
	mov	r0, #8
	orr	r7, r7, r0
	b	.L16
.L29:
	mov	r0, #1
	orr	r7, r7, r0
	b	.L16
.L30:
	mov	r0, #2
	orr	r7, r7, r0
	b	.L16
.L31:
	mov	r0, #4
	orr	r7, r7, r0
	b	.L16
.L41:
	lsl	r0, r3, #2
	add	r0, r0, r3
	lsl	r0, r0, #1
	add	r0, r0, r4
	add	r3, r0, #0
	sub	r3, r3, #48
	b	.L16
.L42:
	mov	r0, #1
	orr	r7, r7, r0
.L43:
	mov	r4, #3
	ldr	r2, .L250
	b	.L236
.L251:
	.align	2, 0
.L250:
	.word	strtol
.L44:
	mov	r4, #3
	ldr	r1, .L252
	str	r1, [sp, #616]
	mov	r2, #0
	mov	sl, r2
	b	.L17
.L253:
	.align	2, 0
.L252:
	.word	strtol
.L45:
	mov	r0, #1
	orr	r7, r7, r0
.L46:
	mov	r4, #3
	ldr	r0, .L254
	str	r0, [sp, #616]
	mov	r1, #8
	b	.L237
.L255:
	.align	2, 0
.L254:
	.word	strtoul
.L47:
	mov	r4, #3
	ldr	r2, .L256
.L236:
	str	r2, [sp, #616]
	mov	r0, #10
	mov	sl, r0
	b	.L17
.L257:
	.align	2, 0
.L256:
	.word	strtoul
.L49:
	mov	r0, #128
	lsl	r0, r0, #1
	orr	r7, r7, r0
	mov	r4, #3
	ldr	r1, .L258
	str	r1, [sp, #616]
	mov	r2, #16
	mov	sl, r2
	b	.L17
.L259:
	.align	2, 0
.L258:
	.word	strtoul
.L54:
	mov	r4, #4
	b	.L17
.L55:
	mov	r4, #2
	b	.L17
.L56:
	mov	r0, sp
	ldr	r1, [sp, #608]
	str	r3, [sp, #620]
	bl	__sccl
	str	r0, [sp, #608]
	mov	r0, #32
	orr	r7, r7, r0
	mov	r4, #1
	ldr	r3, [sp, #620]
	b	.L17
.L57:
	mov	r0, #32
	orr	r7, r7, r0
	mov	r4, #0
	b	.L17
.L58:
	mov	r0, #136
	lsl	r0, r0, #1
	orr	r7, r7, r0
	mov	r4, #3
	ldr	r0, .L260
	str	r0, [sp, #616]
	mov	r1, #16
	b	.L237
.L261:
	.align	2, 0
.L260:
	.word	strtoul
.L59:
	mov	r0, #8
	and	r0, r0, r7
	cmp	r0, #0
	beq	.LCB322
	b	.L3	@long jump
.LCB322:
	mov	r0, #4
	and	r0, r0, r7
	cmp	r0, #0
	beq	.L61	@cond_branch
	mov	r2, #4
	add	r8, r8, r2
	mov	r0, r8
	sub	r0, r0, #4
	ldr	r0, [r0]
	mov	r3, r9
	strh	r3, [r0]
	b	.L3
.L61:
	mov	r0, #1
	and	r7, r7, r0
	cmp	r7, #0
	beq	.L63	@cond_branch
	mov	r0, #4
	add	r8, r8, r0
	mov	r0, r8
	sub	r0, r0, #4
	ldr	r0, [r0]
	mov	r1, r9
	str	r1, [r0]
	b	.L3
.L63:
	mov	r2, #4
	add	r8, r8, r2
	mov	r0, r8
	sub	r0, r0, #4
	ldr	r0, [r0]
	mov	r3, r9
	str	r3, [r0]
	b	.L3
.L65:
	mov	r0, #1
	neg	r0, r0
	bl	.L233	@ far jump
.L66:
	ldr	r1, .L262
	add	r1, r4, r1
	mov	r2, #1
	add	r0, r2, #0
	ldrb	r1, [r1]
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L67	@cond_branch
	orr	r7, r7, r2
.L67:
	mov	r4, #3
	ldr	r0, .L262+4
	str	r0, [sp, #616]
	mov	r1, #10
.L237:
	mov	sl, r1
.L17:
	ldr	r0, [r5, #4]
	cmp	r0, #0
	bgt	.L69	@cond_branch
	add	r0, r5, #0
	str	r3, [sp, #620]
	bl	__srefill
	ldr	r3, [sp, #620]
	cmp	r0, #0
	beq	.LCB398
	b	.L24	@long jump
.LCB398:
.L69:
	mov	r0, #32
	and	r0, r0, r7
	cmp	r0, #0
	bne	.L70	@cond_branch
	b	.L71
.L263:
	.align	2, 0
.L262:
	.word	_ctype_+1
	.word	strtol
.L73:
	mov	r1, #1
	add	r9, r9, r1
	ldr	r0, [r5, #4]
	sub	r0, r0, #1
	str	r0, [r5, #4]
	cmp	r0, #0
	ble	.L74	@cond_branch
	add	r0, r2, #1
	str	r0, [r5]
	b	.L71
.L74:
	add	r0, r5, #0
	str	r3, [sp, #620]
	bl	__srefill
	ldr	r3, [sp, #620]
	cmp	r0, #0
	beq	.LCB441
	b	.L24	@long jump
.LCB441:
.L71:
	ldr	r2, [r5]
	ldr	r1, .L264
	ldrb	r0, [r2]
	add	r1, r0, r1
	mov	r0, #8
	ldrb	r1, [r1]
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L73	@cond_branch
.L70:
	cmp	r4, #4
	bls	.LCB462
	b	.L3	@long jump
.LCB462:
	lsl	r0, r4, #2
	ldr	r1, .L264+4
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L265:
	.align	2, 0
.L264:
	.word	_ctype_+1
	.word	.L230
	.align	2, 0
	.align	2, 0
.L230:
	.word	.L79
	.word	.L92
	.word	.L112
	.word	.L128
	.word	.L186
.L79:
	cmp	r3, #0
	bne	.L80	@cond_branch
	mov	r3, #1
.L80:
	mov	r0, #8
	and	r7, r7, r0
	cmp	r7, #0
	beq	.L81	@cond_branch
	mov	r4, #0
.L82:
	ldr	r7, [r5, #4]
	cmp	r7, r3
	bcs	.L85	@cond_branch
	add	r4, r4, r7
	sub	r3, r3, r7
	ldr	r0, [r5]
	add	r0, r0, r7
	str	r0, [r5]
	add	r0, r5, #0
	str	r3, [sp, #620]
	bl	__srefill
	ldr	r3, [sp, #620]
	cmp	r0, #0
	beq	.L82	@cond_branch
	cmp	r4, #0
	bne	.LCB514
	b	.L24	@long jump
.LCB514:
	b	.L83
.L85:
	add	r4, r4, r3
	sub	r0, r7, r3
	str	r0, [r5, #4]
	ldr	r0, [r5]
	add	r0, r0, r3
	str	r0, [r5]
.L83:
	add	r9, r9, r4
	b	.L3
.L81:
	mov	r1, #4
	add	r8, r8, r1
	mov	r0, r8
	sub	r0, r0, #4
	ldr	r0, [r0]
	mov	r1, #1
	add	r2, r3, #0
	add	r3, r5, #0
	bl	fread
	cmp	r0, #0
	bne	.LCB545
	b	.L24	@long jump
.LCB545:
	add	r9, r9, r0
	ldr	r2, [sp, #612]
	add	r2, r2, #1
	str	r2, [sp, #612]
	b	.L3
.L92:
	cmp	r3, #0
	bne	.L93	@cond_branch
	mov	r3, #1
	neg	r3, r3
.L93:
	mov	r0, #8
	and	r7, r7, r0
	cmp	r7, #0
	beq	.L94	@cond_branch
	mov	r7, #0
	ldr	r1, [r5]
	ldrb	r0, [r1]
	add	r0, r0, sp
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L96	@cond_branch
	mov	r7, #1
	b	.L238
.L98:
	ldr	r0, [r5, #4]
	cmp	r0, #0
	bgt	.L95	@cond_branch
	add	r0, r5, #0
	str	r3, [sp, #620]
	bl	__srefill
	ldr	r3, [sp, #620]
	cmp	r0, #0
	beq	.L95	@cond_branch
	cmp	r7, #0
	bne	.LCB592
	b	.L24	@long jump
.LCB592:
	b	.L96
.L95:
	ldr	r1, [r5]
	ldrb	r0, [r1]
	add	r0, r0, sp
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L96	@cond_branch
	add	r7, r7, #1
.L238:
	ldr	r0, [r5, #4]
	sub	r0, r0, #1
	str	r0, [r5, #4]
	add	r0, r1, #1
	str	r0, [r5]
	sub	r3, r3, #1
	cmp	r3, #0
	bne	.L98	@cond_branch
.L96:
	cmp	r7, #0
	bne	.LCB621
	b	.L26	@long jump
.LCB621:
	b	.L116
.L94:
	mov	r0, #4
	add	r8, r8, r0
	mov	r0, r8
	sub	r0, r0, #4
	ldr	r6, [r0]
	add	r7, r6, #0
	b	.L104
.L107:
	ldr	r0, [r5, #4]
	cmp	r0, #0
	bgt	.L104	@cond_branch
	add	r0, r5, #0
	str	r3, [sp, #620]
	bl	__srefill
	ldr	r3, [sp, #620]
	cmp	r0, #0
	beq	.L104	@cond_branch
	cmp	r6, r7
	bne	.LCB652
	b	.L24	@long jump
.LCB652:
	b	.L105
.L104:
	ldr	r1, [r5]
	ldrb	r0, [r1]
	add	r0, r0, sp
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L105	@cond_branch
	ldr	r0, [r5, #4]
	sub	r0, r0, #1
	str	r0, [r5, #4]
	ldrb	r0, [r1]
	strb	r0, [r6]
	add	r0, r1, #1
	str	r0, [r5]
	add	r6, r6, #1
	sub	r3, r3, #1
	cmp	r3, #0
	bne	.L107	@cond_branch
.L105:
	sub	r7, r6, r7
	cmp	r7, #0
	bne	.LCB684
	b	.L26	@long jump
.LCB684:
	mov	r0, #0
	strb	r0, [r6]
	ldr	r1, [sp, #612]
	add	r1, r1, #1
	str	r1, [sp, #612]
	b	.L116
.L112:
	cmp	r3, #0
	bne	.L113	@cond_branch
	mov	r3, #1
	neg	r3, r3
.L113:
	mov	r4, #8
	and	r7, r7, r4
	cmp	r7, #0
	beq	.L114	@cond_branch
	mov	r7, #0
	ldr	r2, [r5]
	ldr	r1, .L266
	ldrb	r0, [r2]
	add	r1, r0, r1
	add	r0, r4, #0
	ldrb	r1, [r1]
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L116	@cond_branch
	mov	r7, #1
	b	.L239
.L267:
	.align	2, 0
.L266:
	.word	_ctype_+1
.L118:
	ldr	r0, [r5, #4]
	cmp	r0, #0
	bgt	.L115	@cond_branch
	add	r0, r5, #0
	str	r3, [sp, #620]
	bl	__srefill
	ldr	r3, [sp, #620]
	cmp	r0, #0
	bne	.L116	@cond_branch
.L115:
	ldr	r2, [r5]
	ldr	r1, .L268
	ldrb	r0, [r2]
	add	r1, r0, r1
	mov	r0, #8
	ldrb	r1, [r1]
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L116	@cond_branch
	add	r7, r7, #1
.L239:
	ldr	r0, [r5, #4]
	sub	r0, r0, #1
	str	r0, [r5, #4]
	add	r0, r2, #1
	str	r0, [r5]
	sub	r3, r3, #1
	cmp	r3, #0
	bne	.L118	@cond_branch
.L116:
	add	r9, r9, r7
	b	.L3
.L269:
	.align	2, 0
.L268:
	.word	_ctype_+1
.L114:
	mov	r1, #4
	add	r8, r8, r1
	mov	r0, r8
	sub	r0, r0, #4
	ldr	r6, [r0]
	add	r7, r6, #0
	ldr	r2, [r5]
	ldr	r0, .L270
	ldrb	r1, [r2]
	add	r0, r1, r0
	add	r1, r4, #0
	ldrb	r0, [r0]
	and	r1, r1, r0
	ldr	r4, [sp, #612]
	add	r4, r4, #1
	cmp	r1, #0
	bne	.L123	@cond_branch
	b	.L240
.L271:
	.align	2, 0
.L270:
	.word	_ctype_+1
.L125:
	ldr	r0, [r5, #4]
	cmp	r0, #0
	bgt	.L122	@cond_branch
	add	r0, r5, #0
	str	r3, [sp, #620]
	bl	__srefill
	ldr	r3, [sp, #620]
	cmp	r0, #0
	bne	.L123	@cond_branch
.L122:
	ldr	r2, [r5]
	ldr	r1, .L272
	ldrb	r0, [r2]
	add	r1, r0, r1
	mov	r0, #8
	ldrb	r1, [r1]
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L123	@cond_branch
.L240:
	ldr	r0, [r5, #4]
	sub	r0, r0, #1
	str	r0, [r5, #4]
	ldrb	r0, [r2]
	strb	r0, [r6]
	add	r0, r2, #1
	str	r0, [r5]
	add	r6, r6, #1
	sub	r3, r3, #1
	cmp	r3, #0
	bne	.L125	@cond_branch
.L123:
	mov	r0, #0
	strb	r0, [r6]
	sub	r0, r6, r7
	add	r9, r9, r0
	str	r4, [sp, #612]
	b	.L3
.L273:
	.align	2, 0
.L272:
	.word	_ctype_+1
.L128:
	sub	r3, r3, #1
	mov	r0, #174
	lsl	r0, r0, #1
	cmp	r3, r0
	bls	.L129	@cond_branch
	add	r3, r0, #0
.L129:
	add	r3, r3, #1
	mov	r0, #176
	lsl	r0, r0, #2
	orr	r7, r7, r0
	add	r6, sp, #256
	cmp	r3, #0
	bne	.LCB882
	b	.L131	@long jump
.LCB882:
.L133:
	ldr	r0, [r5]
	ldrb	r4, [r0]
	add	r0, r4, #0
	sub	r0, r0, #43
	cmp	r0, #77
	bls	.LCB892
	b	.L131	@long jump
.LCB892:
	lsl	r0, r0, #2
	ldr	r1, .L274
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L275:
	.align	2, 0
.L274:
	.word	.L169
	.align	2, 0
	.align	2, 0
.L169:
	.word	.L164
	.word	.L131
	.word	.L164
	.word	.L131
	.word	.L131
	.word	.L135
	.word	.L146
	.word	.L146
	.word	.L146
	.word	.L146
	.word	.L146
	.word	.L146
	.word	.L146
	.word	.L148
	.word	.L148
	.word	.L131
	.word	.L131
	.word	.L131
	.word	.L131
	.word	.L131
	.word	.L131
	.word	.L131
	.word	.L161
	.word	.L161
	.word	.L161
	.word	.L161
	.word	.L161
	.word	.L161
	.word	.L131
	.word	.L131
	.word	.L131
	.word	.L131
	.word	.L131
	.word	.L131
	.word	.L131
	.word	.L131
	.word	.L131
	.word	.L131
	.word	.L131
	.word	.L131
	.word	.L131
	.word	.L131
	.word	.L131
	.word	.L131
	.word	.L131
	.word	.L167
	.word	.L131
	.word	.L131
	.word	.L131
	.word	.L131
	.word	.L131
	.word	.L131
	.word	.L131
	.word	.L131
	.word	.L161
	.word	.L161
	.word	.L161
	.word	.L161
	.word	.L161
	.word	.L161
	.word	.L131
	.word	.L131
	.word	.L131
	.word	.L131
	.word	.L131
	.word	.L131
	.word	.L131
	.word	.L131
	.word	.L131
	.word	.L131
	.word	.L131
	.word	.L131
	.word	.L131
	.word	.L131
	.word	.L131
	.word	.L131
	.word	.L131
	.word	.L167
.L135:
	mov	r1, sl
	cmp	r1, #0
	bne	.L136	@cond_branch
	mov	r2, #8
	mov	sl, r2
	mov	r0, #128
	lsl	r0, r0, #1
	orr	r7, r7, r0
.L136:
	mov	r0, #128
	lsl	r0, r0, #2
	and	r0, r0, r7
	cmp	r0, #0
	beq	.L137	@cond_branch
	ldr	r0, .L276
	b	.L241
.L277:
	.align	2, 0
.L276:
	.word	-705
.L137:
	ldr	r0, .L278
	b	.L241
.L279:
	.align	2, 0
.L278:
	.word	-449
.L146:
	ldr	r0, .L280
	mov	r2, sl
	lsl	r1, r2, #1
	add	r1, r1, r0
	mov	r2, #0
	ldrsh	r0, [r1, r2]
	mov	sl, r0
	ldr	r0, .L280+4
	b	.L241
.L281:
	.align	2, 0
.L280:
	.word	basefix.3
	.word	-449
.L148:
	ldr	r1, .L282
	mov	r2, sl
	lsl	r0, r2, #1
	add	r0, r0, r1
	mov	r2, #0
	ldrsh	r1, [r0, r2]
	mov	sl, r1
	cmp	r1, #8
	ble	.L131	@cond_branch
	ldr	r0, .L282+4
	b	.L241
.L283:
	.align	2, 0
.L282:
	.word	basefix.3
	.word	-449
.L161:
	mov	r0, sl
	cmp	r0, #10
	ble	.L131	@cond_branch
	ldr	r0, .L284
	b	.L241
.L285:
	.align	2, 0
.L284:
	.word	-449
.L164:
	mov	r0, #64
	and	r0, r0, r7
	cmp	r0, #0
	beq	.L131	@cond_branch
	mov	r0, #65
	neg	r0, r0
	b	.L241
.L167:
	mov	r0, #128
	lsl	r0, r0, #1
	and	r0, r0, r7
	cmp	r0, #0
	beq	.L131	@cond_branch
	ldr	r0, .L286
	add	r0, r0, sp
	cmp	r6, r0
	bne	.L131	@cond_branch
	mov	r1, #16
	mov	sl, r1
	ldr	r0, .L286+4
.L241:
	and	r7, r7, r0
	strb	r4, [r6]
	add	r6, r6, #1
	ldr	r0, [r5, #4]
	sub	r0, r0, #1
	str	r0, [r5, #4]
	cmp	r0, #0
	ble	.L171	@cond_branch
	ldr	r0, [r5]
	add	r0, r0, #1
	str	r0, [r5]
	b	.L132
.L287:
	.align	2, 0
.L286:
	.word	257
	.word	-257
.L171:
	add	r0, r5, #0
	str	r3, [sp, #620]
	bl	__srefill
	ldr	r3, [sp, #620]
	cmp	r0, #0
	bne	.L131	@cond_branch
.L132:
	sub	r3, r3, #1
	cmp	r3, #0
	beq	.LCB1053
	b	.L133	@long jump
.LCB1053:
.L131:
	mov	r0, #128
	and	r0, r0, r7
	cmp	r0, #0
	beq	.L175	@cond_branch
	add	r0, sp, #256
	cmp	r6, r0
	bhi	.LCB1064
	b	.L26	@long jump
.LCB1064:
	sub	r6, r6, #1
	ldrb	r0, [r6]
	add	r1, r5, #0
	bl	ungetc
	b	.L26
.L175:
	sub	r0, r6, #1
	ldrb	r4, [r0]
	cmp	r4, #120
	beq	.L178	@cond_branch
	cmp	r4, #88
	bne	.L177	@cond_branch
.L178:
	add	r6, r0, #0
	add	r0, r4, #0
	add	r1, r5, #0
	bl	ungetc
.L177:
	mov	r0, #8
	and	r0, r0, r7
	cmp	r0, #0
	beq	.LCB1090
	b	.L225	@long jump
.LCB1090:
	strb	r0, [r6]
	add	r0, sp, #256
	mov	r1, #0
	mov	r2, sl
	ldr	r3, [sp, #616]
	bl	_call_via_r3
	add	r1, r0, #0
	mov	r0, #16
	and	r0, r0, r7
	cmp	r0, #0
	bne	.L184	@cond_branch
	mov	r0, #4
	and	r0, r0, r7
	cmp	r0, #0
	beq	.L182	@cond_branch
	mov	r2, #4
	add	r8, r8, r2
	mov	r0, r8
	sub	r0, r0, #4
	ldr	r0, [r0]
	strh	r1, [r0]
	b	.L181
.L182:
	mov	r0, #1
	and	r7, r7, r0
	cmp	r7, #0
	beq	.L184	@cond_branch
	mov	r3, #4
	add	r8, r8, r3
	b	.L242
.L184:
	mov	r0, #4
	add	r8, r8, r0
.L242:
	mov	r0, r8
	sub	r0, r0, #4
	ldr	r0, [r0]
	str	r1, [r0]
.L181:
	ldr	r1, [sp, #612]
	add	r1, r1, #1
	str	r1, [sp, #612]
	b	.L225
.L186:
	sub	r3, r3, #1
	mov	r0, #174
	lsl	r0, r0, #1
	cmp	r3, r0
	bls	.L187	@cond_branch
	add	r3, r0, #0
.L187:
	add	r3, r3, #1
	mov	r0, #240
	lsl	r0, r0, #2
	orr	r7, r7, r0
	add	r6, sp, #256
	cmp	r3, #0
	bne	.LCB1161
	b	.L189	@long jump
.LCB1161:
.L191:
	ldr	r0, [r5]
	ldrb	r4, [r0]
	add	r0, r4, #0
	sub	r0, r0, #43
	cmp	r0, #58
	bls	.LCB1171
	b	.L189	@long jump
.LCB1171:
	lsl	r0, r0, #2
	ldr	r1, .L288
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L289:
	.align	2, 0
.L288:
	.word	.L212
	.align	2, 0
	.align	2, 0
.L212:
	.word	.L205
	.word	.L189
	.word	.L205
	.word	.L207
	.word	.L189
	.word	.L202
	.word	.L202
	.word	.L202
	.word	.L202
	.word	.L202
	.word	.L202
	.word	.L202
	.word	.L202
	.word	.L202
	.word	.L202
	.word	.L189
	.word	.L189
	.word	.L189
	.word	.L189
	.word	.L189
	.word	.L189
	.word	.L189
	.word	.L189
	.word	.L189
	.word	.L189
	.word	.L189
	.word	.L210
	.word	.L189
	.word	.L189
	.word	.L189
	.word	.L189
	.word	.L189
	.word	.L189
	.word	.L189
	.word	.L189
	.word	.L189
	.word	.L189
	.word	.L189
	.word	.L189
	.word	.L189
	.word	.L189
	.word	.L189
	.word	.L189
	.word	.L189
	.word	.L189
	.word	.L189
	.word	.L189
	.word	.L189
	.word	.L189
	.word	.L189
	.word	.L189
	.word	.L189
	.word	.L189
	.word	.L189
	.word	.L189
	.word	.L189
	.word	.L189
	.word	.L189
	.word	.L210
.L202:
	mov	r0, #193
	neg	r0, r0
	and	r7, r7, r0
	b	.L203
.L205:
	mov	r0, #64
	and	r0, r0, r7
	cmp	r0, #0
	beq	.L189	@cond_branch
	mov	r0, #65
	neg	r0, r0
	and	r7, r7, r0
	b	.L203
.L207:
	mov	r0, #128
	lsl	r0, r0, #1
	and	r0, r0, r7
	cmp	r0, #0
	beq	.L189	@cond_branch
	ldr	r0, .L290
	and	r7, r7, r0
	b	.L203
.L291:
	.align	2, 0
.L290:
	.word	-321
.L210:
	mov	r0, #160
	lsl	r0, r0, #2
	and	r0, r0, r7
	mov	r1, #128
	lsl	r1, r1, #2
	cmp	r0, r1
	bne	.L189	@cond_branch
	ldr	r0, .L292
	and	r7, r7, r0
	mov	r0, #192
	orr	r7, r7, r0
.L203:
	strb	r4, [r6]
	add	r6, r6, #1
	ldr	r0, [r5, #4]
	sub	r0, r0, #1
	str	r0, [r5, #4]
	cmp	r0, #0
	ble	.L214	@cond_branch
	ldr	r0, [r5]
	add	r0, r0, #1
	str	r0, [r5]
	b	.L190
.L293:
	.align	2, 0
.L292:
	.word	-769
.L214:
	add	r0, r5, #0
	str	r3, [sp, #620]
	bl	__srefill
	ldr	r3, [sp, #620]
	cmp	r0, #0
	bne	.L189	@cond_branch
.L190:
	sub	r3, r3, #1
	cmp	r3, #0
	beq	.LCB1268
	b	.L191	@long jump
.LCB1268:
.L189:
	mov	r0, #128
	and	r0, r0, r7
	cmp	r0, #0
	beq	.L218	@cond_branch
	mov	r0, #128
	lsl	r0, r0, #2
	and	r0, r0, r7
	cmp	r0, #0
	beq	.L219	@cond_branch
	add	r0, sp, #256
	cmp	r6, r0
	bls	.L26	@cond_branch
	add	r4, r0, #0
.L222:
	sub	r6, r6, #1
	ldrb	r0, [r6]
	add	r1, r5, #0
	bl	ungetc
	cmp	r6, r4
	bhi	.L222	@cond_branch
	b	.L26
.L219:
	sub	r6, r6, #1
	ldrb	r4, [r6]
	cmp	r4, #101
	beq	.L224	@cond_branch
	cmp	r4, #69
	beq	.L224	@cond_branch
	add	r0, r4, #0
	add	r1, r5, #0
	bl	ungetc
	sub	r6, r6, #1
	ldrb	r4, [r6]
.L224:
	add	r0, r4, #0
	add	r1, r5, #0
	bl	ungetc
.L218:
	mov	r0, #8
	and	r0, r0, r7
	cmp	r0, #0
	bne	.L225	@cond_branch
	strb	r0, [r6]
	add	r0, sp, #256
	bl	atof
	add	r2, r1, #0
	add	r1, r0, #0
	mov	r0, #1
	and	r0, r0, r7
	cmp	r0, #0
	beq	.L226	@cond_branch
	mov	r3, #4
	add	r8, r8, r3
	b	.L243
.L226:
	mov	r0, #2
	and	r7, r7, r0
	cmp	r7, #0
	beq	.L228	@cond_branch
	mov	r0, #4
	add	r8, r8, r0
.L243:
	mov	r0, r8
	sub	r0, r0, #4
	ldr	r0, [r0]
	str	r1, [r0]
	str	r2, [r0, #4]
	b	.L227
.L228:
	mov	r3, #4
	add	r8, r8, r3
	mov	r0, r8
	sub	r0, r0, #4
	ldr	r4, [r0]
	add	r0, r1, #0
	add	r1, r2, #0
	bl	__truncdfsf2
	str	r0, [r4]
.L227:
	ldr	r0, [sp, #612]
	add	r0, r0, #1
	str	r0, [sp, #612]
.L225:
	add	r0, sp, #256
	sub	r0, r6, r0
	add	r9, r9, r0
	bl	.L3	@ far jump
.L24:
	ldr	r0, [sp, #612]
	cmp	r0, #0
	bne	.L233	@cond_branch
	mov	r0, #1
	neg	r0, r0
	b	.L233
.L235:
.L26:
	ldr	r0, [sp, #612]
.L233:
	mov	r3, #156
	lsl	r3, r3, #2
	add	sp, sp, r3
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7, pc}
.Lfe1:
	.size	 __svfscanf,.Lfe1-__svfscanf
	.align	2, 0
	.globl	__sccl
	.type	 __sccl,function
	.thumb_func
__sccl:
	push	{r4, r5, r6, lr}
	add	r5, r0, #0
	ldrb	r3, [r1]
	add	r1, r1, #1
	cmp	r3, #94
	bne	.L295	@cond_branch
	mov	r6, #1
	ldrb	r3, [r1]
	add	r1, r1, #1
	b	.L296
.L295:
	mov	r6, #0
.L296:
	add	r0, r5, #0
	add	r0, r0, #255
.L300:
	strb	r6, [r0]
	sub	r0, r0, #1
	cmp	r0, r5
	bge	.L300	@cond_branch
	cmp	r3, #0
	bne	.L302	@cond_branch
	sub	r0, r1, #1
	b	.L322
.L302:
	mov	r0, #1
	sub	r6, r0, r6
.L323:
	ldrb	r2, [r1]
.L303:
	add	r0, r5, r3
	strb	r6, [r0]
.L306:
	add	r4, r2, #0
	add	r1, r1, #1
	cmp	r2, #45
	beq	.L309	@cond_branch
	cmp	r2, #45
	bgt	.L320	@cond_branch
	cmp	r2, #0
	beq	.L308	@cond_branch
	b	.L318
.L320:
	cmp	r2, #93
	beq	.L317	@cond_branch
	b	.L318
.L308:
	sub	r0, r1, #1
	b	.L322
.L309:
	ldrb	r2, [r1]
	add	r4, r2, #0
	cmp	r2, #93
	beq	.L311	@cond_branch
	cmp	r2, r3
	bge	.L310	@cond_branch
.L311:
	mov	r3, #45
	b	.L303
.L310:
	add	r1, r1, #1
.L312:
	add	r3, r3, #1
	add	r0, r5, r3
	strb	r6, [r0]
	cmp	r3, r4
	blt	.L312	@cond_branch
	ldrb	r2, [r1]
	b	.L306
.L317:
	add	r0, r1, #0
	b	.L321
.L318:
	add	r3, r4, #0
	b	.L323
.L322:
.L321:
	pop	{r4, r5, r6, pc}
.Lfe2:
	.size	 __sccl,.Lfe2-__sccl
.text
	.align	2, 0
