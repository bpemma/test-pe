@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
.text
	.align	2, 0
	.globl	strchr
	.type	 strchr,function
	.thumb_func
strchr:
	push	{r4, r5, r6, r7, lr}
	add	r2, r0, #0
	lsl	r1, r1, #24
	lsr	r7, r1, #24
	mov	r0, #3
	and	r0, r0, r2
	cmp	r0, #0
	bne	.L3	@cond_branch
	mov	r5, #0
	mov	r0, #0
	ldr	r4, [r2]
.L7:
	lsl	r5, r5, #8
	orr	r5, r5, r7
	add	r0, r0, #1
	cmp	r0, #3
	bls	.L7	@cond_branch
	add	r3, r2, #0
	ldr	r0, .L22
	mov	ip, r0
	add	r0, r4, r0
	bic	r0, r0, r4
	ldr	r6, .L22+4
	and	r0, r0, r6
	cmp	r0, #0
	bne	.L10	@cond_branch
	add	r1, r5, #0
	eor	r1, r1, r4
	ldr	r2, .L22
	b	.L21
.L23:
	.align	2, 0
.L22:
	.word	-16843009
	.word	-2139062144
.L11:
	add	r3, r3, #4
	ldr	r2, [r3]
	mov	r1, ip
	add	r0, r2, r1
	bic	r0, r0, r2
	and	r0, r0, r6
	cmp	r0, #0
	bne	.L10	@cond_branch
	add	r1, r5, #0
	eor	r1, r1, r2
	mov	r2, ip
.L21:
	add	r0, r1, r2
	bic	r0, r0, r1
	and	r0, r0, r6
	cmp	r0, #0
	beq	.L11	@cond_branch
.L10:
	add	r2, r3, #0
.L3:
	ldrb	r0, [r2]
	cmp	r0, #0
	beq	.L15	@cond_branch
	cmp	r0, r7
	beq	.L19	@cond_branch
.L16:
	add	r2, r2, #1
	ldrb	r0, [r2]
	cmp	r0, #0
	beq	.L15	@cond_branch
	cmp	r0, r7
	bne	.L16	@cond_branch
.L15:
	ldrb	r0, [r2]
	cmp	r0, r7
	beq	.L19	@cond_branch
	mov	r0, #0
	b	.L20
.L19:
	add	r0, r2, #0
.L20:
	pop	{r4, r5, r6, r7, pc}
.Lfe1:
	.size	 strchr,.Lfe1-strchr
.text
	.align	2, 0
