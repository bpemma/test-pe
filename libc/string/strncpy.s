@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
.text
	.align	2, 0
	.globl	strncpy
	.type	 strncpy,function
	.thumb_func
strncpy:
	push	{r4, r5, r6, r7, lr}
	add	r7, r0, #0
	add	r4, r7, #0
	add	r3, r1, #0
	add	r0, r3, #0
	orr	r0, r0, r7
	mov	r1, #3
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L9	@cond_branch
	cmp	r2, #3
	bls	.L9	@cond_branch
	ldr	r1, [r3]
	ldr	r6, .L20
	add	r0, r1, r6
	bic	r0, r0, r1
	ldr	r5, .L20+4
	b	.L19
.L21:
	.align	2, 0
.L20:
	.word	-16843009
	.word	-2139062144
.L6:
	sub	r2, r2, #4
	ldmia	r3!, {r0}
	stmia	r4!, {r0}
	cmp	r2, #3
	bls	.L9	@cond_branch
	ldr	r1, [r3]
	add	r0, r1, r6
	bic	r0, r0, r1
.L19:
	and	r0, r0, r5
	cmp	r0, #0
	beq	.L6	@cond_branch
.L9:
	cmp	r2, #0
	beq	.L10	@cond_branch
	sub	r2, r2, #1
	ldrb	r0, [r3]
	strb	r0, [r4]
	lsl	r0, r0, #24
	add	r3, r3, #1
	add	r4, r4, #1
	cmp	r0, #0
	bne	.L9	@cond_branch
.L10:
	add	r0, r2, #0
	sub	r2, r2, #1
	cmp	r0, #0
	beq	.L18	@cond_branch
	mov	r1, #0
.L16:
	strb	r1, [r4]
	add	r4, r4, #1
	add	r0, r2, #0
	sub	r2, r2, #1
	cmp	r0, #0
	bne	.L16	@cond_branch
.L18:
	add	r0, r7, #0
	pop	{r4, r5, r6, r7, pc}
.Lfe1:
	.size	 strncpy,.Lfe1-strncpy
.text
	.align	2, 0
