@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
.text
	.align	2, 0
	.globl	strncasecmp
	.type	 strncasecmp,function
	.thumb_func
strncasecmp:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	mov	ip, r0
	add	r7, r1, #0
	add	r4, r2, #0
	cmp	r4, #0
	bne	.L3	@cond_branch
	mov	r0, #0
	b	.L15
.L3:
	sub	r4, r4, #1
	ldr	r0, .L16
	mov	sl, r0
	mov	r8, sl
	mov	r1, #1
	mov	r9, r1
.L12:
	mov	r1, ip
	ldrb	r0, [r1]
	add	r2, r0, #0
	mov	r0, r8
	add	r1, r2, r0
	mov	r0, r9
	ldrb	r1, [r1]
	and	r0, r0, r1
	add	r5, r2, #0
	cmp	r0, #0
	beq	.L4	@cond_branch
	add	r2, r2, #32
.L4:
	ldrb	r0, [r7]
	add	r3, r0, #0
	mov	r0, r8
	add	r1, r3, r0
	mov	r0, r9
	ldrb	r1, [r1]
	and	r0, r0, r1
	add	r6, r3, #0
	cmp	r0, #0
	beq	.L5	@cond_branch
	add	r3, r3, #32
.L5:
	cmp	r2, r3
	bne	.L7	@cond_branch
	cmp	r4, #0
	beq	.L7	@cond_branch
	cmp	r5, #0
	beq	.L7	@cond_branch
	cmp	r6, #0
	beq	.L7	@cond_branch
	mov	r1, #1
	add	ip, ip, r1
	add	r7, r7, #1
	sub	r4, r4, #1
	b	.L12
.L17:
	.align	2, 0
.L16:
	.word	_ctype_+1
.L7:
	add	r3, r5, #0
	mov	r0, sl
	add	r1, r3, r0
	mov	r4, #1
	add	r0, r4, #0
	ldrb	r1, [r1]
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L13	@cond_branch
	add	r3, r3, #32
.L13:
	add	r2, r6, #0
	mov	r0, sl
	add	r1, r2, r0
	add	r0, r4, #0
	ldrb	r1, [r1]
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L14	@cond_branch
	add	r2, r2, #32
.L14:
	sub	r0, r3, r2
.L15:
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7, pc}
.Lfe1:
	.size	 strncasecmp,.Lfe1-strncasecmp
.text
	.align	2, 0
