@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section .rodata
	.align	2, 0
	.type	 mon_lengths,object
	.size	 mon_lengths,96
mon_lengths:
	.word	31
	.word	28
	.word	31
	.word	30
	.word	31
	.word	30
	.word	31
	.word	31
	.word	30
	.word	31
	.word	30
	.word	31
	.word	31
	.word	29
	.word	31
	.word	30
	.word	31
	.word	30
	.word	31
	.word	31
	.word	30
	.word	31
	.word	30
	.word	31
	.align	2, 0
	.type	 year_lengths,object
	.size	 year_lengths,8
year_lengths:
	.word	365
	.word	366
.text
	.align	2, 0
	.globl	localtime_r
	.type	 localtime_r,function
	.thumb_func
localtime_r:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	r7, r1, #0
	ldr	r4, [r0]
	ldr	r0, .L36
	mov	r8, r0
	add	r0, r4, #0
	mov	r1, r8
	bl	__divsi3
	add	r6, r0, #0
	add	r0, r4, #0
	mov	r1, r8
	bl	__modsi3
	add	r5, r0, #0
	ldr	r1, .L36+4
	mov	r9, r1
	ldr	r0, .L36+8
	mov	sl, r0
	cmp	r5, #0
	bge	.L4	@cond_branch
	mov	r1, r8
.L5:
	add	r5, r5, r1
	sub	r6, r6, #1
	cmp	r5, #0
	blt	.L5	@cond_branch
.L4:
	ldr	r0, .L36+12
	cmp	r5, r0
	ble	.L35	@cond_branch
	ldr	r1, .L36+16
.L9:
	add	r5, r5, r1
	add	r6, r6, #1
	cmp	r5, r0
	bgt	.L9	@cond_branch
.L35:
	mov	r4, #225
	lsl	r4, r4, #4
	add	r0, r5, #0
	add	r1, r4, #0
	bl	__divsi3
	str	r0, [r7, #8]
	add	r0, r5, #0
	add	r1, r4, #0
	bl	__modsi3
	add	r5, r0, #0
	mov	r1, #60
	bl	__divsi3
	str	r0, [r7, #4]
	add	r0, r5, #0
	mov	r1, #60
	bl	__modsi3
	str	r0, [r7]
	add	r0, r6, #4
	mov	r1, #7
	bl	__modsi3
	str	r0, [r7, #24]
	cmp	r0, #0
	bge	.L11	@cond_branch
	add	r0, r0, #7
	str	r0, [r7, #24]
.L11:
	ldr	r4, .L36+20
	cmp	r6, #0
	blt	.L22	@cond_branch
	b	.L13
.L37:
	.align	2, 0
.L36:
	.word	86400
	.word	year_lengths
	.word	mon_lengths
	.word	86399
	.word	-86400
	.word	1970
.L19:
	add	r4, r4, #1
	sub	r6, r6, r0
.L13:
	mov	r5, #0
	mov	r0, #3
	and	r0, r0, r4
	cmp	r0, #0
	bne	.L18	@cond_branch
	add	r0, r4, #0
	mov	r1, #100
	bl	__modsi3
	cmp	r0, #0
	bne	.L17	@cond_branch
.L18:
	add	r0, r4, #0
	mov	r1, #200
	lsl	r1, r1, #1
	bl	__modsi3
	cmp	r0, #0
	bne	.L16	@cond_branch
.L17:
	mov	r5, #1
.L16:
	lsl	r0, r5, #2
	add	r0, r0, r9
	ldr	r0, [r0]
	cmp	r6, r0
	bge	.L19	@cond_branch
	b	.L21
.L22:
	sub	r4, r4, #1
	mov	r5, #0
	mov	r0, #3
	and	r0, r0, r4
	cmp	r0, #0
	bne	.L27	@cond_branch
	add	r0, r4, #0
	mov	r1, #100
	bl	__modsi3
	cmp	r0, #0
	bne	.L26	@cond_branch
.L27:
	add	r0, r4, #0
	mov	r1, #200
	lsl	r1, r1, #1
	bl	__modsi3
	cmp	r0, #0
	bne	.L25	@cond_branch
.L26:
	mov	r5, #1
.L25:
	lsl	r0, r5, #2
	add	r0, r0, r9
	ldr	r0, [r0]
	add	r6, r6, r0
	cmp	r6, #0
	blt	.L22	@cond_branch
.L21:
	ldr	r1, .L38
	add	r0, r4, r1
	str	r0, [r7, #20]
	str	r6, [r7, #28]
	lsl	r0, r5, #1
	add	r0, r0, r5
	lsl	r0, r0, #4
	mov	r1, sl
	add	r2, r0, r1
	mov	r0, #0
	str	r0, [r7, #16]
	ldr	r0, [r2]
	cmp	r6, r0
	blt	.L31	@cond_branch
.L33:
	ldr	r1, [r7, #16]
	lsl	r0, r1, #2
	add	r0, r0, r2
	ldr	r0, [r0]
	sub	r6, r6, r0
	add	r1, r1, #1
	str	r1, [r7, #16]
	lsl	r1, r1, #2
	add	r1, r1, r2
	ldr	r0, [r1]
	cmp	r6, r0
	bge	.L33	@cond_branch
.L31:
	add	r0, r6, #1
	str	r0, [r7, #12]
	mov	r0, #1
	neg	r0, r0
	str	r0, [r7, #32]
	add	r0, r7, #0
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7, pc}
.L39:
	.align	2, 0
.L38:
	.word	-1900
.Lfe1:
	.size	 localtime_r,.Lfe1-localtime_r
.text
	.align	2, 0
