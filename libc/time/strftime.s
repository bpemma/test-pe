@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section .rodata
	.align	2, 0
	.type	 dname_len,object
	.size	 dname_len,28
dname_len:
	.word	6
	.word	6
	.word	7
	.word	9
	.word	8
	.word	6
	.word	8
	.align	2, 0
	.type	 dname,object
	.size	 dname,28
dname:
	.word	.LC0
	.word	.LC1
	.word	.LC2
	.word	.LC3
	.word	.LC4
	.word	.LC5
	.word	.LC6
	.align	2, 0
.LC6:
	.ascii	"Saturday\000"
	.align	2, 0
.LC5:
	.ascii	"Friday\000"
	.align	2, 0
.LC4:
	.ascii	"Thursday\000"
	.align	2, 0
.LC3:
	.ascii	"Wednesday\000"
	.align	2, 0
.LC2:
	.ascii	"Tuesday\000"
	.align	2, 0
.LC1:
	.ascii	"Monday\000"
	.align	2, 0
.LC0:
	.ascii	"Sunday\000"
	.align	2, 0
	.type	 mname_len,object
	.size	 mname_len,48
mname_len:
	.word	7
	.word	8
	.word	5
	.word	5
	.word	3
	.word	4
	.word	4
	.word	6
	.word	9
	.word	7
	.word	8
	.word	8
	.align	2, 0
	.type	 mname,object
	.size	 mname,48
mname:
	.word	.LC7
	.word	.LC8
	.word	.LC9
	.word	.LC10
	.word	.LC11
	.word	.LC12
	.word	.LC13
	.word	.LC14
	.word	.LC15
	.word	.LC16
	.word	.LC17
	.word	.LC18
	.align	2, 0
.LC18:
	.ascii	"December\000"
	.align	2, 0
.LC17:
	.ascii	"November\000"
	.align	2, 0
.LC16:
	.ascii	"October\000"
	.align	2, 0
.LC15:
	.ascii	"September\000"
	.align	2, 0
.LC14:
	.ascii	"August\000"
	.align	2, 0
.LC13:
	.ascii	"July\000"
	.align	2, 0
.LC12:
	.ascii	"June\000"
	.align	2, 0
.LC11:
	.ascii	"May\000"
	.align	2, 0
.LC10:
	.ascii	"April\000"
	.align	2, 0
.LC9:
	.ascii	"March\000"
	.align	2, 0
.LC8:
	.ascii	"February\000"
	.align	2, 0
.LC7:
	.ascii	"January\000"
	.align	2, 0
.LC23:
	.ascii	" %.2d %2.2d:%2.2d:%2.2d %.4d\000"
	.align	2, 0
.LC25:
	.ascii	"%.2d\000"
	.align	2, 0
.LC27:
	.ascii	"%2.2d\000"
	.align	2, 0
.LC29:
	.ascii	"%.3d\000"
	.align	2, 0
.LC31:
	.ascii	"%1.1d\000"
	.align	2, 0
.LC33:
	.ascii	" %.2d %.4d\000"
	.align	2, 0
.LC35:
	.ascii	"%2.2d:%2.2d:%2.2d\000"
	.align	2, 0
.LC37:
	.ascii	"%.4d\000"
.text
	.align	2, 0
	.globl	strftime
	.type	 strftime,function
	.thumb_func
strftime:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-24
	add	r7, r0, #0
	mov	r9, r1
	str	r2, [sp, #12]
	mov	r8, r3
	mov	r6, #0
	b	.L3
.L13:
	ldr	r0, [sp, #12]
	add	r0, r0, #1
	str	r0, [sp, #12]
	ldrb	r0, [r0]
	sub	r0, r0, #37
	cmp	r0, #84
	bls	.LCB24
	b	.L14	@long jump
.LCB24:
	lsl	r0, r0, #2
	ldr	r1, .L137
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L138:
	.align	2, 0
.L137:
	.word	.L124
	.align	2, 0
	.align	2, 0
.L124:
	.word	.L121
	.word	.L14
	.word	.L14
	.word	.L14
	.word	.L14
	.word	.L14
	.word	.L14
	.word	.L14
	.word	.L14
	.word	.L14
	.word	.L14
	.word	.L14
	.word	.L14
	.word	.L14
	.word	.L14
	.word	.L14
	.word	.L14
	.word	.L14
	.word	.L14
	.word	.L14
	.word	.L14
	.word	.L14
	.word	.L14
	.word	.L14
	.word	.L14
	.word	.L14
	.word	.L14
	.word	.L14
	.word	.L23
	.word	.L39
	.word	.L14
	.word	.L14
	.word	.L14
	.word	.L14
	.word	.L14
	.word	.L63
	.word	.L66
	.word	.L14
	.word	.L14
	.word	.L14
	.word	.L78
	.word	.L14
	.word	.L14
	.word	.L14
	.word	.L14
	.word	.L14
	.word	.L86
	.word	.L14
	.word	.L89
	.word	.L14
	.word	.L95
	.word	.L111
	.word	.L117
	.word	.L14
	.word	.L14
	.word	.L14
	.word	.L14
	.word	.L14
	.word	.L14
	.word	.L14
	.word	.L15
	.word	.L31
	.word	.L47
	.word	.L60
	.word	.L14
	.word	.L14
	.word	.L14
	.word	.L14
	.word	.L14
	.word	.L72
	.word	.L14
	.word	.L14
	.word	.L75
	.word	.L14
	.word	.L14
	.word	.L81
	.word	.L14
	.word	.L14
	.word	.L14
	.word	.L14
	.word	.L14
	.word	.L14
	.word	.L92
	.word	.L98
	.word	.L114
.L15:
	mov	r4, #0
	mov	r2, r9
	sub	r2, r2, #1
	ldr	r3, .L139
.L19:
	cmp	r6, r2
	bcc	.LCB55
	b	.L130	@long jump
.LCB55:
	add	r1, r7, r6
	mov	r5, r8
	ldr	r0, [r5, #24]
	lsl	r0, r0, #2
	add	r0, r0, r3
	ldr	r0, [r0]
	add	r0, r0, r4
	ldrb	r0, [r0]
	strb	r0, [r1]
	add	r6, r6, #1
	add	r4, r4, #1
	cmp	r4, #2
	ble	.L19	@cond_branch
	b	.L14
.L140:
	.align	2, 0
.L139:
	.word	dname
.L23:
	mov	r4, #0
	ldr	r1, .L141
	mov	r2, r8
	ldr	r0, [r2, #24]
	lsl	r2, r0, #2
	add	r1, r2, r1
	ldr	r1, [r1]
	cmp	r4, r1
	blt	.LCB90
	b	.L14	@long jump
.LCB90:
	mov	r5, r9
	sub	r5, r5, #1
	ldr	r0, .L141+4
	add	r3, r2, r0
	add	r2, r1, #0
.L27:
	cmp	r6, r5
	bcc	.LCB105
	b	.L130	@long jump
.LCB105:
	add	r0, r7, r6
	ldr	r1, [r3]
	add	r1, r1, r4
	ldrb	r1, [r1]
	strb	r1, [r0]
	add	r6, r6, #1
	add	r4, r4, #1
	cmp	r4, r2
	blt	.L27	@cond_branch
	b	.L14
.L142:
	.align	2, 0
.L141:
	.word	dname_len
	.word	dname
.L31:
	mov	r4, #0
	mov	r2, r9
	sub	r2, r2, #1
	ldr	r3, .L143
.L35:
	cmp	r6, r2
	bcc	.LCB140
	b	.L130	@long jump
.LCB140:
	add	r1, r7, r6
	mov	r5, r8
	ldr	r0, [r5, #16]
	lsl	r0, r0, #2
	add	r0, r0, r3
	ldr	r0, [r0]
	add	r0, r0, r4
	ldrb	r0, [r0]
	strb	r0, [r1]
	add	r6, r6, #1
	add	r4, r4, #1
	cmp	r4, #2
	ble	.L35	@cond_branch
	b	.L14
.L144:
	.align	2, 0
.L143:
	.word	mname
.L39:
	mov	r4, #0
	ldr	r1, .L145
	mov	r2, r8
	ldr	r0, [r2, #16]
	lsl	r2, r0, #2
	add	r1, r2, r1
	ldr	r1, [r1]
	cmp	r4, r1
	blt	.LCB175
	b	.L14	@long jump
.LCB175:
	mov	r5, r9
	sub	r5, r5, #1
	ldr	r0, .L145+4
	add	r3, r2, r0
	add	r2, r1, #0
.L43:
	cmp	r6, r5
	bcc	.LCB190
	b	.L130	@long jump
.LCB190:
	add	r0, r7, r6
	ldr	r1, [r3]
	add	r1, r1, r4
	ldrb	r1, [r1]
	strb	r1, [r0]
	add	r6, r6, #1
	add	r4, r4, #1
	cmp	r4, r2
	blt	.L43	@cond_branch
	b	.L14
.L146:
	.align	2, 0
.L145:
	.word	mname_len
	.word	mname
.L47:
	mov	r0, r9
	sub	r0, r0, #24
	cmp	r6, r0
	bcc	.LCB216
	b	.L130	@long jump
.LCB216:
	mov	r4, #0
	mov	r3, r8
	ldr	r0, [r3, #24]
	ldr	r2, [r3, #16]
	ldr	r5, [r3, #12]
	mov	sl, r5
	ldr	r3, [r3, #8]
	mov	r1, r8
	ldr	r1, [r1, #4]
	str	r1, [sp, #16]
	mov	r5, r8
	ldr	r5, [r5]
	str	r5, [sp, #20]
	mov	r1, r8
	ldr	r1, [r1, #20]
	mov	ip, r1
	ldr	r1, .L147
	lsl	r0, r0, #2
	add	r5, r0, r1
.L52:
	add	r0, r7, r6
	ldr	r1, [r5]
	add	r1, r1, r4
	ldrb	r1, [r1]
	strb	r1, [r0]
	add	r6, r6, #1
	add	r4, r4, #1
	cmp	r4, #2
	ble	.L52	@cond_branch
	add	r1, r7, r6
	mov	r0, #32
	strb	r0, [r1]
	add	r6, r6, #1
	mov	r4, #0
	ldr	r1, .L147+4
	lsl	r0, r2, #2
	add	r5, r0, r1
.L57:
	add	r0, r7, r6
	ldr	r1, [r5]
	add	r1, r1, r4
	ldrb	r1, [r1]
	strb	r1, [r0]
	add	r6, r6, #1
	add	r4, r4, #1
	cmp	r4, #2
	ble	.L57	@cond_branch
	add	r0, r7, r6
	ldr	r2, [sp, #16]
	str	r2, [sp]
	ldr	r4, [sp, #20]
	str	r4, [sp, #4]
	ldr	r1, .L147+8
	add	r1, r1, ip
	str	r1, [sp, #8]
	ldr	r1, .L147+12
	mov	r2, sl
	bl	sprintf
	add	r6, r6, #17
	b	.L14
.L148:
	.align	2, 0
.L147:
	.word	dname
	.word	mname
	.word	1900
	.word	.LC23
.L60:
	mov	r0, r9
	sub	r0, r0, #2
	cmp	r6, r0
	bcc	.LCB316
	b	.L130	@long jump
.LCB316:
	add	r0, r7, r6
	ldr	r1, .L149
	mov	r5, r8
	ldr	r2, [r5, #12]
	b	.L131
.L150:
	.align	2, 0
.L149:
	.word	.LC25
.L63:
	mov	r0, r9
	sub	r0, r0, #2
	cmp	r6, r0
	bcc	.LCB338
	b	.L130	@long jump
.LCB338:
	add	r0, r7, r6
	ldr	r1, .L151
	mov	r3, r8
	ldr	r2, [r3, #8]
	b	.L131
.L152:
	.align	2, 0
.L151:
	.word	.LC27
.L66:
	mov	r0, r9
	sub	r0, r0, #2
	cmp	r6, r0
	bcc	.LCB360
	b	.L130	@long jump
.LCB360:
	mov	r4, r8
	ldr	r3, [r4, #8]
	cmp	r3, #0
	beq	.L69	@cond_branch
	cmp	r3, #12
	bne	.L68	@cond_branch
.L69:
	add	r1, r7, r6
	mov	r0, #49
	strb	r0, [r1]
	add	r6, r6, #1
	add	r1, r7, r6
	mov	r0, #50
	b	.L132
.L68:
	add	r4, r7, r6
	ldr	r5, .L153
	add	r0, r3, #0
	mov	r1, #12
	b	.L133
.L154:
	.align	2, 0
.L153:
	.word	.LC25
.L72:
	mov	r0, r9
	sub	r0, r0, #3
	cmp	r6, r0
	bcc	.LCB398
	b	.L130	@long jump
.LCB398:
	add	r0, r7, r6
	ldr	r1, .L155
	mov	r5, r8
	ldr	r2, [r5, #28]
	add	r2, r2, #1
	bl	sprintf
	add	r6, r6, #3
	b	.L14
.L156:
	.align	2, 0
.L155:
	.word	.LC29
.L75:
	mov	r0, r9
	sub	r0, r0, #2
	cmp	r6, r0
	bcc	.LCB422
	b	.L130	@long jump
.LCB422:
	add	r0, r7, r6
	ldr	r1, .L157
	mov	r3, r8
	ldr	r2, [r3, #16]
	add	r2, r2, #1
	b	.L131
.L158:
	.align	2, 0
.L157:
	.word	.LC25
.L78:
	mov	r0, r9
	sub	r0, r0, #2
	cmp	r6, r0
	bcc	.LCB445
	b	.L130	@long jump
.LCB445:
	add	r0, r7, r6
	ldr	r1, .L159
	mov	r4, r8
	ldr	r2, [r4, #4]
	b	.L131
.L160:
	.align	2, 0
.L159:
	.word	.LC27
.L81:
	mov	r0, r9
	sub	r0, r0, #2
	cmp	r6, r0
	bcc	.LCB467
	b	.L130	@long jump
.LCB467:
	mov	r5, r8
	ldr	r3, [r5, #8]
	cmp	r3, #11
	bgt	.L83	@cond_branch
	add	r1, r7, r6
	mov	r0, #65
	b	.L134
.L83:
	add	r1, r7, r6
	mov	r0, #80
.L134:
	strb	r0, [r1]
	add	r6, r6, #1
	add	r1, r7, r6
	mov	r0, #77
	b	.L132
.L86:
	mov	r0, r9
	sub	r0, r0, #2
	cmp	r6, r0
	bcc	.LCB492
	b	.L130	@long jump
.LCB492:
	add	r0, r7, r6
	ldr	r1, .L161
	mov	r3, r8
	ldr	r2, [r3]
	b	.L131
.L162:
	.align	2, 0
.L161:
	.word	.LC27
.L89:
	mov	r0, r9
	sub	r0, r0, #2
	cmp	r6, r0
	bcc	.LCB514
	b	.L130	@long jump
.LCB514:
	add	r4, r7, r6
	ldr	r5, .L163
	mov	r0, r8
	ldr	r1, [r0, #24]
	sub	r1, r1, #7
	ldr	r0, [r0, #28]
	sub	r0, r0, r1
	mov	r1, #7
	bl	__divsi3
	b	.L135
.L164:
	.align	2, 0
.L163:
	.word	.LC27
.L92:
	mov	r0, r9
	sub	r0, r0, #1
	cmp	r6, r0
	bcc	.LCB541
	b	.L130	@long jump
.LCB541:
	add	r0, r7, r6
	ldr	r1, .L165
	mov	r3, r8
	ldr	r2, [r3, #24]
	bl	sprintf
	b	.L136
.L166:
	.align	2, 0
.L165:
	.word	.LC31
.L95:
	mov	r0, r9
	sub	r0, r0, #2
	cmp	r6, r0
	bcc	.LCB564
	b	.L130	@long jump
.LCB564:
	add	r4, r7, r6
	ldr	r5, .L167
	mov	r0, r8
	ldr	r1, [r0, #24]
	mov	r0, #8
	sub	r0, r0, r1
	mov	r1, #7
	bl	__modsi3
	add	r1, r0, #0
	mov	r2, r8
	ldr	r0, [r2, #28]
	add	r0, r0, r1
	mov	r1, #7
	bl	__divsi3
	b	.L135
.L168:
	.align	2, 0
.L167:
	.word	.LC27
.L98:
	mov	r0, r9
	sub	r0, r0, #15
	cmp	r6, r0
	bcc	.LCB596
	b	.L130	@long jump
.LCB596:
	mov	r4, #0
	mov	r3, r8
	ldr	r0, [r3, #24]
	ldr	r2, [r3, #16]
	ldr	r5, [r3, #12]
	mov	sl, r5
	ldr	r1, [r3, #20]
	mov	ip, r1
	ldr	r1, .L169
	lsl	r0, r0, #2
	add	r5, r0, r1
.L103:
	add	r0, r7, r6
	ldr	r1, [r5]
	add	r1, r1, r4
	ldrb	r1, [r1]
	strb	r1, [r0]
	add	r6, r6, #1
	add	r4, r4, #1
	cmp	r4, #2
	ble	.L103	@cond_branch
	add	r1, r7, r6
	mov	r0, #32
	strb	r0, [r1]
	add	r6, r6, #1
	mov	r4, #0
	ldr	r1, .L169+4
	lsl	r0, r2, #2
	add	r5, r0, r1
.L108:
	add	r0, r7, r6
	ldr	r1, [r5]
	add	r1, r1, r4
	ldrb	r1, [r1]
	strb	r1, [r0]
	add	r6, r6, #1
	add	r4, r4, #1
	cmp	r4, #2
	ble	.L108	@cond_branch
	add	r0, r7, r6
	ldr	r3, .L169+8
	add	r3, r3, ip
	ldr	r1, .L169+12
	mov	r2, sl
	bl	sprintf
	add	r6, r6, #8
	b	.L14
.L170:
	.align	2, 0
.L169:
	.word	dname
	.word	mname
	.word	1900
	.word	.LC33
.L111:
	mov	r0, r9
	sub	r0, r0, #8
	cmp	r6, r0
	bcs	.L130	@cond_branch
	add	r0, r7, r6
	ldr	r1, .L171
	mov	r3, r8
	ldr	r2, [r3, #8]
	ldr	r3, [r3, #4]
	mov	r5, r8
	ldr	r4, [r5]
	str	r4, [sp]
	bl	sprintf
	add	r6, r6, #8
	b	.L14
.L172:
	.align	2, 0
.L171:
	.word	.LC35
.L114:
	mov	r0, r9
	sub	r0, r0, #2
	cmp	r6, r0
	bcs	.L130	@cond_branch
	add	r4, r7, r6
	ldr	r5, .L173
	mov	r1, r8
	ldr	r0, [r1, #20]
	mov	r1, #100
	bl	__modsi3
	add	r0, r0, #100
	mov	r1, #100
.L133:
	bl	__modsi3
.L135:
	add	r2, r0, #0
	add	r0, r4, #0
	add	r1, r5, #0
.L131:
	bl	sprintf
	add	r6, r6, #2
	b	.L14
.L174:
	.align	2, 0
.L173:
	.word	.LC27
.L117:
	mov	r0, r9
	sub	r0, r0, #4
	cmp	r6, r0
	bcs	.L130	@cond_branch
	add	r0, r7, r6
	ldr	r1, .L175
	mov	r3, r8
	ldr	r2, [r3, #20]
	ldr	r4, .L175+4
	add	r2, r2, r4
	bl	sprintf
	add	r6, r6, #4
	b	.L14
.L176:
	.align	2, 0
.L175:
	.word	.LC37
	.word	1900
.L121:
	mov	r0, r9
	sub	r0, r0, #1
	cmp	r6, r0
	bcs	.L130	@cond_branch
	add	r1, r7, r6
	mov	r0, #37
.L132:
	strb	r0, [r1]
.L136:
	add	r6, r6, #1
.L14:
	ldr	r5, [sp, #12]
	ldrb	r0, [r5]
	cmp	r0, #0
	beq	.L4	@cond_branch
	add	r5, r5, #1
	str	r5, [sp, #12]
.L3:
	ldr	r1, [sp, #12]
	ldrb	r0, [r1]
	cmp	r0, #0
	beq	.L4	@cond_branch
	cmp	r0, #37
	beq	.L7	@cond_branch
	mov	r2, r9
	sub	r2, r2, #1
.L8:
	cmp	r6, r2
	bcc	.L10	@cond_branch
.L130:
	mov	r0, #0
	b	.L129
.L10:
	add	r1, r7, r6
	ldr	r3, [sp, #12]
	ldrb	r0, [r3]
	strb	r0, [r1]
	add	r3, r3, #1
	str	r3, [sp, #12]
	add	r6, r6, #1
	ldrb	r0, [r3]
	cmp	r0, #0
	beq	.L4	@cond_branch
	cmp	r0, #37
	bne	.L8	@cond_branch
.L7:
	ldr	r4, [sp, #12]
	ldrb	r0, [r4]
	cmp	r0, #0
	beq	.LCB839
	b	.L13	@long jump
.LCB839:
.L4:
	add	r1, r7, r6
	mov	r0, #0
	strb	r0, [r1]
	add	r0, r6, #0
.L129:
	add	sp, sp, #24
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7, pc}
.Lfe1:
	.size	 strftime,.Lfe1-strftime
.text
	.align	2, 0
