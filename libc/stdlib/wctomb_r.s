@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section .rodata
	.align	2, 0
.LC0:
	.ascii	"C-SJIS\000"
	.align	2, 0
.LC2:
	.ascii	"C-EUCJP\000"
	.align	2, 0
.LC4:
	.ascii	"C-JIS\000"
.text
	.align	2, 0
	.globl	_wctomb_r
	.type	 _wctomb_r,function
	.thumb_func
_wctomb_r:
	push	{r4, r5, r6, r7, lr}
	add	r6, r0, #0
	add	r4, r1, #0
	add	r5, r2, #0
	add	r7, r3, #0
	ldr	r0, [r6, #52]
	bl	strlen
	cmp	r0, #1
	bgt	.LCB15
	b	.L4	@long jump
.LCB15:
	ldr	r0, [r6, #52]
	ldr	r1, .L29
	bl	strcmp
	cmp	r0, #0
	bne	.L5	@cond_branch
	lsl	r0, r5, #24
	lsr	r2, r0, #24
	add	r6, r2, #0
	asr	r0, r5, #8
	lsl	r0, r0, #24
	lsr	r1, r0, #24
	add	r3, r1, #0
	cmp	r4, #0
	bne	.LCB33
	b	.L27	@long jump
.LCB33:
	cmp	r1, #0
	bne	.LCB35
	b	.L4	@long jump
.LCB35:
	add	r0, r1, #0
	add	r0, r0, #127
	lsl	r0, r0, #24
	lsr	r0, r0, #24
	cmp	r0, #30
	bls	.L9	@cond_branch
	add	r0, r1, #0
	add	r0, r0, #32
	lsl	r0, r0, #24
	lsr	r0, r0, #24
	cmp	r0, #15
	bhi	.L22	@cond_branch
.L9:
	add	r0, r2, #0
	sub	r0, r0, #64
	lsl	r0, r0, #24
	lsr	r0, r0, #24
	cmp	r0, #62
	bls	.L10	@cond_branch
	add	r0, r2, #0
	add	r0, r0, #128
	lsl	r0, r0, #24
	lsr	r0, r0, #24
	cmp	r0, #124
	bhi	.L22	@cond_branch
.L10:
	strb	r3, [r4]
	strb	r6, [r4, #1]
	mov	r0, #2
	b	.L28
.L30:
	.align	2, 0
.L29:
	.word	.LC0
.L5:
	ldr	r0, [r6, #52]
	ldr	r1, .L31
	bl	strcmp
	cmp	r0, #0
	bne	.L13	@cond_branch
	lsl	r0, r5, #24
	lsr	r2, r0, #24
	asr	r0, r5, #8
	lsl	r0, r0, #24
	lsr	r1, r0, #24
	cmp	r4, #0
	beq	.L27	@cond_branch
	cmp	r1, #0
	beq	.L4	@cond_branch
	add	r0, r1, #0
	add	r0, r0, #95
	lsl	r0, r0, #24
	lsr	r0, r0, #24
	cmp	r0, #93
	bhi	.L22	@cond_branch
	add	r0, r2, #0
	add	r0, r0, #95
	lsl	r0, r0, #24
	lsr	r0, r0, #24
	cmp	r0, #93
	bhi	.L22	@cond_branch
	strb	r1, [r4]
	strb	r2, [r4, #1]
	mov	r0, #2
	b	.L28
.L32:
	.align	2, 0
.L31:
	.word	.LC2
.L13:
	ldr	r0, [r6, #52]
	ldr	r1, .L33
	bl	strcmp
	cmp	r0, #0
	bne	.L4	@cond_branch
	mov	r1, #0
	lsl	r0, r5, #24
	lsr	r3, r0, #24
	asr	r0, r5, #8
	lsl	r0, r0, #24
	lsr	r2, r0, #24
	cmp	r4, #0
	bne	.L20	@cond_branch
	mov	r0, #1
	b	.L28
.L34:
	.align	2, 0
.L33:
	.word	.LC4
.L20:
	cmp	r2, #0
	beq	.L21	@cond_branch
	add	r0, r2, #0
	sub	r0, r0, #33
	lsl	r0, r0, #24
	lsr	r0, r0, #24
	cmp	r0, #93
	bhi	.L22	@cond_branch
	add	r0, r3, #0
	sub	r0, r0, #33
	lsl	r0, r0, #24
	lsr	r0, r0, #24
	cmp	r0, #93
	bhi	.L22	@cond_branch
	ldr	r0, [r7]
	cmp	r0, #0
	bne	.L23	@cond_branch
	mov	r0, #1
	str	r0, [r7]
	mov	r0, #27
	strb	r0, [r4]
	add	r4, r4, #1
	mov	r0, #36
	strb	r0, [r4]
	add	r4, r4, #1
	mov	r0, #66
	strb	r0, [r4]
	add	r4, r4, #1
	mov	r1, #3
.L23:
	strb	r2, [r4]
	strb	r3, [r4, #1]
	add	r0, r1, #2
	b	.L28
.L22:
	mov	r0, #1
	neg	r0, r0
	b	.L28
.L21:
	ldr	r0, [r7]
	cmp	r0, #0
	beq	.L26	@cond_branch
	str	r1, [r7]
	mov	r0, #27
	strb	r0, [r4]
	add	r4, r4, #1
	mov	r0, #40
	strb	r0, [r4]
	add	r4, r4, #1
	mov	r0, #66
	strb	r0, [r4]
	add	r4, r4, #1
	mov	r1, #3
.L26:
	strb	r3, [r4]
	add	r0, r1, #1
	b	.L28
.L4:
	cmp	r4, #0
	beq	.L27	@cond_branch
	strb	r5, [r4]
	mov	r0, #1
	b	.L28
.L27:
	mov	r0, #0
.L28:
	pop	{r4, r5, r6, r7, pc}
.Lfe1:
	.size	 _wctomb_r,.Lfe1-_wctomb_r
.text
	.align	2, 0
