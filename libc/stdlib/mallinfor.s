@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
.text
	.align	2, 0
	.globl	__malloc_update_mallinfo
	.type	 __malloc_update_mallinfo,function
	.thumb_func
__malloc_update_mallinfo:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	ldr	r0, .L14
	ldr	r1, [r0, #8]
	ldr	r4, [r1, #4]
	mov	r1, #4
	neg	r1, r1
	and	r4, r4, r1
	mov	r6, #0
	mov	r8, r0
	cmp	r4, #15
	ble	.L3	@cond_branch
	mov	r6, #1
.L3:
	mov	r3, #1
	ldr	r7, .L14+4
	mov	ip, r8
.L7:
	lsl	r0, r3, #3
	mov	r1, ip
	add	r2, r0, r1
	ldr	r1, [r2, #12]
	add	r3, r3, #1
	cmp	r1, r2
	beq	.L6	@cond_branch
	mov	r5, #4
	neg	r5, r5
.L11:
	ldr	r0, [r1, #4]
	and	r0, r0, r5
	add	r4, r4, r0
	add	r6, r6, #1
	ldr	r1, [r1, #12]
	cmp	r1, r2
	bne	.L11	@cond_branch
.L6:
	cmp	r3, #127
	ble	.L7	@cond_branch
	str	r6, [r7, #4]
	ldr	r0, [r7]
	sub	r0, r0, r4
	str	r0, [r7, #28]
	str	r4, [r7, #32]
	mov	r1, r8
	ldr	r0, [r1, #8]
	ldr	r0, [r0, #4]
	mov	r1, #4
	neg	r1, r1
	and	r0, r0, r1
	str	r0, [r7, #36]
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7, pc}
.L15:
	.align	2, 0
.L14:
	.word	__malloc_av_
	.word	__malloc_current_mallinfo
.Lfe1:
	.size	 __malloc_update_mallinfo,.Lfe1-__malloc_update_mallinfo
	.align	2, 0
	.globl	_mallinfo_r
	.type	 _mallinfo_r,function
	.thumb_func
_mallinfo_r:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-40
	add	r5, r0, #0
	add	r4, r1, #0
	add	r0, r4, #0
	bl	__malloc_lock
	bl	__malloc_update_mallinfo
	mov	r1, sp
	ldr	r0, .L17
	ldmia	r0!, {r2, r3, r6}
	stmia	r1!, {r2, r3, r6}
	ldmia	r0!, {r2, r3, r6}
	stmia	r1!, {r2, r3, r6}
	ldmia	r0!, {r2, r3, r6}
	stmia	r1!, {r2, r3, r6}
	ldr	r0, [r0]
	str	r0, [r1]
	add	r0, r4, #0
	bl	__malloc_unlock
	add	r1, r5, #0
	mov	r0, sp
	ldmia	r0!, {r2, r3, r4}
	stmia	r1!, {r2, r3, r4}
	ldmia	r0!, {r2, r3, r6}
	stmia	r1!, {r2, r3, r6}
	ldmia	r0!, {r2, r4, r6}
	stmia	r1!, {r2, r4, r6}
	ldr	r0, [r0]
	str	r0, [r1]
	add	r0, r5, #0
	add	sp, sp, #40
	pop	{r4, r5, r6, pc}
.L18:
	.align	2, 0
.L17:
	.word	__malloc_current_mallinfo
.Lfe2:
	.size	 _mallinfo_r,.Lfe2-_mallinfo_r
.text
	.align	2, 0
