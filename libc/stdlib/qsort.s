@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
.text
	.align	2, 0
	.globl	qsort
	.type	 qsort,function
	.thumb_func
qsort:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-32
	str	r0, [sp]
	mov	r9, r1
	add	r7, r2, #0
	str	r3, [sp, #4]
.L27:
	mov	r1, #3
	ldr	r0, [sp]
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L28	@cond_branch
	add	r0, r7, #0
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L28	@cond_branch
	mov	r1, #4
	eor	r1, r1, r7
	neg	r0, r1
	orr	r0, r0, r1
	lsr	r0, r0, #31
	b	.L242
.L28:
	mov	r0, #2
.L242:
	str	r0, [sp, #12]
	mov	r1, #0
	str	r1, [sp, #16]
	mov	r2, r9
	cmp	r2, #6
	bhi	.L31	@cond_branch
	ldr	r0, [sp]
	add	r5, r0, r7
	mov	r0, r9
	mul	r0, r0, r7
	ldr	r2, [sp]
	add	r1, r2, r0
	str	r0, [sp, #28]
	cmp	r5, r1
	bcc	.LCB47
	b	.L26	@long jump
.LCB47:
.L35:
	add	r6, r5, #0
	add	r5, r5, r7
	mov	r8, r5
	b	.L36
.L39:
	ldr	r0, [sp, #12]
	cmp	r0, #0
	bne	.L41	@cond_branch
	ldr	r1, [r6]
	ldr	r0, [r5]
	str	r0, [r6]
	str	r1, [r5]
	b	.L38
.L41:
	ldr	r1, [sp, #12]
	cmp	r1, #1
	bgt	.L43	@cond_branch
	lsr	r2, r7, #2
	add	r4, r6, #0
	add	r3, r5, #0
.L44:
	ldr	r1, [r4]
	ldr	r0, [r3]
	stmia	r4!, {r0}
	stmia	r3!, {r1}
	sub	r2, r2, #1
	cmp	r2, #0
	bgt	.L44	@cond_branch
	b	.L38
.L43:
	add	r3, r7, #0
	add	r4, r6, #0
	add	r2, r5, #0
.L50:
	ldrb	r1, [r4]
	ldrb	r0, [r2]
	strb	r0, [r4]
	add	r4, r4, #1
	strb	r1, [r2]
	add	r2, r2, #1
	sub	r3, r3, #1
	cmp	r3, #0
	bgt	.L50	@cond_branch
.L38:
	add	r6, r5, #0
.L36:
	ldr	r2, [sp]
	cmp	r6, r2
	bls	.L34	@cond_branch
	sub	r4, r6, r7
	add	r0, r4, #0
	add	r1, r6, #0
	ldr	r2, [sp, #4]
	bl	_call_via_r2
	add	r5, r4, #0
	cmp	r0, #0
	bgt	.L39	@cond_branch
.L34:
	mov	r5, r8
	ldr	r1, [sp]
	ldr	r2, [sp, #28]
	add	r0, r1, r2
	cmp	r5, r0
	bcc	.L35	@cond_branch
	b	.L26
.L31:
	mov	r1, r9
	lsr	r0, r1, #1
	mul	r0, r0, r7
	ldr	r2, [sp]
	add	r5, r2, r0
	sub	r1, r1, #1
	str	r1, [sp, #20]
	mov	r0, r9
	cmp	r0, #7
	bhi	.LCB159
	b	.L58	@long jump
.LCB159:
	add	r6, r2, #0
	mov	r0, r1
	mul	r0, r0, r7
	add	r2, r2, r0
	mov	sl, r2
	mov	r1, r9
	cmp	r1, #40
	bhi	.LCB169
	b	.L59	@long jump
.LCB169:
	lsr	r0, r1, #3
	mov	r2, r0
	mul	r2, r2, r7
	str	r2, [sp, #8]
	add	r4, r6, r2
	lsl	r0, r2, #1
	add	r6, r0, r6
	ldr	r0, [sp]
	add	r1, r4, #0
	ldr	r2, [sp, #4]
	bl	_call_via_r2
	cmp	r0, #0
	bge	.L60	@cond_branch
	add	r0, r4, #0
	add	r1, r6, #0
	ldr	r2, [sp, #4]
	bl	_call_via_r2
	cmp	r0, #0
	blt	.L66	@cond_branch
	ldr	r0, [sp]
	add	r1, r6, #0
	ldr	r2, [sp, #4]
	bl	_call_via_r2
	ldr	r1, [sp]
	cmp	r0, #0
	bge	.L65	@cond_branch
	add	r1, r6, #0
	b	.L65
.L60:
	add	r0, r4, #0
	add	r1, r6, #0
	ldr	r2, [sp, #4]
	bl	_call_via_r2
	cmp	r0, #0
	bgt	.L66	@cond_branch
	ldr	r0, [sp]
	add	r1, r6, #0
	ldr	r2, [sp, #4]
	bl	_call_via_r2
	add	r1, r6, #0
	cmp	r0, #0
	bge	.L65	@cond_branch
	ldr	r1, [sp]
	b	.L65
.L66:
	add	r1, r4, #0
.L65:
	add	r6, r1, #0
	ldr	r0, [sp, #8]
	sub	r0, r5, r0
	mov	r8, r0
	ldr	r1, [sp, #8]
	add	r4, r5, r1
	add	r1, r5, #0
	ldr	r2, [sp, #4]
	bl	_call_via_r2
	cmp	r0, #0
	bge	.L71	@cond_branch
	add	r0, r5, #0
	add	r1, r4, #0
	ldr	r2, [sp, #4]
	bl	_call_via_r2
	cmp	r0, #0
	blt	.L77	@cond_branch
	mov	r0, r8
	add	r1, r4, #0
	ldr	r2, [sp, #4]
	bl	_call_via_r2
	mov	r1, r8
	cmp	r0, #0
	bge	.L76	@cond_branch
	add	r1, r4, #0
	b	.L76
.L71:
	add	r0, r5, #0
	add	r1, r4, #0
	ldr	r2, [sp, #4]
	bl	_call_via_r2
	cmp	r0, #0
	bgt	.L77	@cond_branch
	mov	r0, r8
	add	r1, r4, #0
	ldr	r2, [sp, #4]
	bl	_call_via_r2
	add	r1, r4, #0
	cmp	r0, #0
	bge	.L76	@cond_branch
	mov	r1, r8
	b	.L76
.L77:
	add	r1, r5, #0
.L76:
	add	r5, r1, #0
	ldr	r1, [sp, #8]
	lsl	r0, r1, #1
	mov	r2, sl
	sub	r2, r2, r0
	mov	r8, r2
	mov	r0, sl
	sub	r4, r0, r1
	mov	r0, r8
	add	r1, r4, #0
	ldr	r2, [sp, #4]
	bl	_call_via_r2
	cmp	r0, #0
	bge	.L82	@cond_branch
	add	r0, r4, #0
	mov	r1, sl
	ldr	r2, [sp, #4]
	bl	_call_via_r2
	cmp	r0, #0
	blt	.L88	@cond_branch
	mov	r0, r8
	mov	r1, sl
	ldr	r2, [sp, #4]
	bl	_call_via_r2
	mov	r1, r8
	cmp	r0, #0
	bge	.L87	@cond_branch
	mov	r1, sl
	b	.L87
.L82:
	add	r0, r4, #0
	mov	r1, sl
	ldr	r2, [sp, #4]
	bl	_call_via_r2
	cmp	r0, #0
	bgt	.L88	@cond_branch
	mov	r0, r8
	mov	r1, sl
	ldr	r2, [sp, #4]
	bl	_call_via_r2
	mov	r1, sl
	cmp	r0, #0
	bge	.L87	@cond_branch
	mov	r1, r8
	b	.L87
.L88:
	add	r1, r4, #0
.L87:
	mov	sl, r1
.L59:
	add	r0, r6, #0
	add	r1, r5, #0
	ldr	r2, [sp, #4]
	bl	_call_via_r2
	cmp	r0, #0
	bge	.L93	@cond_branch
	add	r0, r5, #0
	mov	r1, sl
	ldr	r2, [sp, #4]
	bl	_call_via_r2
	cmp	r0, #0
	blt	.L99	@cond_branch
	add	r0, r6, #0
	mov	r1, sl
	ldr	r2, [sp, #4]
	bl	_call_via_r2
	add	r1, r6, #0
	cmp	r0, #0
	bge	.L98	@cond_branch
	mov	r1, sl
	b	.L98
.L93:
	add	r0, r5, #0
	mov	r1, sl
	ldr	r2, [sp, #4]
	bl	_call_via_r2
	cmp	r0, #0
	bgt	.L99	@cond_branch
	add	r0, r6, #0
	mov	r1, sl
	ldr	r2, [sp, #4]
	bl	_call_via_r2
	mov	r1, sl
	cmp	r0, #0
	bge	.L98	@cond_branch
	add	r1, r6, #0
	b	.L98
.L99:
	add	r1, r5, #0
.L98:
	add	r5, r1, #0
.L58:
	ldr	r0, [sp, #12]
	cmp	r0, #0
	bne	.L104	@cond_branch
	ldr	r2, [sp]
	ldr	r1, [r2]
	ldr	r0, [r5]
	str	r0, [r2]
	str	r1, [r5]
	add	r0, r2, r7
	str	r0, [sp, #24]
	mov	r1, r9
	mul	r1, r1, r7
	str	r1, [sp, #28]
	b	.L105
.L104:
	ldr	r2, [sp, #12]
	cmp	r2, #1
	bgt	.L106	@cond_branch
	lsr	r2, r7, #2
	ldr	r4, [sp]
	add	r3, r5, #0
	add	r0, r4, r7
	str	r0, [sp, #24]
	mov	r1, r9
	mul	r1, r1, r7
	str	r1, [sp, #28]
.L107:
	ldr	r1, [r4]
	ldr	r0, [r3]
	stmia	r4!, {r0}
	stmia	r3!, {r1}
	sub	r2, r2, #1
	cmp	r2, #0
	bgt	.L107	@cond_branch
	b	.L105
.L106:
	add	r4, r7, #0
	ldr	r3, [sp]
	add	r2, r5, #0
	add	r0, r3, r7
	str	r0, [sp, #24]
	mov	r1, r9
	mul	r1, r1, r7
	str	r1, [sp, #28]
.L113:
	ldrb	r1, [r3]
	ldrb	r0, [r2]
	strb	r0, [r3]
	add	r3, r3, #1
	strb	r1, [r2]
	add	r2, r2, #1
	sub	r4, r4, #1
	cmp	r4, #0
	bgt	.L113	@cond_branch
.L105:
	ldr	r6, [sp, #24]
	mov	r9, r6
	ldr	r2, [sp, #20]
	mov	r0, r2
	mul	r0, r0, r7
	ldr	r1, [sp]
	add	r1, r1, r0
	mov	r8, r1
	mov	r5, r8
	b	.L122
.L241:
	ldr	r1, [r6]
	ldr	r0, [r5]
	str	r0, [r6]
	str	r1, [r5]
	add	r6, r6, r7
	mov	sl, r6
	sub	r5, r5, r7
	mov	ip, r5
	b	.L166
.L165:
	ldr	r2, [sp, #12]
	cmp	r2, #1
	bgt	.L167	@cond_branch
	lsr	r3, r7, #2
	add	r4, r6, #0
	add	r2, r5, #0
	add	r0, r4, r7
	mov	sl, r0
	sub	r1, r2, r7
	mov	ip, r1
.L168:
	ldr	r1, [r4]
	ldr	r0, [r2]
	stmia	r4!, {r0}
	stmia	r2!, {r1}
	sub	r3, r3, #1
	cmp	r3, #0
	bgt	.L168	@cond_branch
	b	.L166
.L167:
	add	r4, r7, #0
	add	r3, r6, #0
	add	r2, r5, #0
	add	r0, r3, r7
	mov	sl, r0
	sub	r1, r2, r7
	mov	ip, r1
.L174:
	ldrb	r1, [r3]
	ldrb	r0, [r2]
	strb	r0, [r3]
	add	r3, r3, #1
	strb	r1, [r2]
	add	r2, r2, #1
	sub	r4, r4, #1
	cmp	r4, #0
	bgt	.L174	@cond_branch
.L166:
	mov	r2, #1
	str	r2, [sp, #16]
	mov	r6, sl
	mov	r5, ip
	b	.L122
.L124:
	add	r1, r6, r7
	mov	sl, r1
	cmp	r0, #0
	bne	.L126	@cond_branch
	mov	r2, #1
	str	r2, [sp, #16]
	ldr	r0, [sp, #12]
	cmp	r0, #0
	bne	.L127	@cond_branch
	mov	r2, r9
	ldr	r1, [r2]
	ldr	r0, [r6]
	str	r0, [r2]
	str	r1, [r6]
	add	r6, r2, r7
	b	.L128
.L127:
	ldr	r0, [sp, #12]
	cmp	r0, #1
	bgt	.L129	@cond_branch
	lsr	r3, r7, #2
	mov	r2, r9
	add	r4, r6, #0
	add	r6, r2, r7
.L130:
	ldr	r1, [r2]
	ldr	r0, [r4]
	stmia	r2!, {r0}
	stmia	r4!, {r1}
	sub	r3, r3, #1
	cmp	r3, #0
	bgt	.L130	@cond_branch
	b	.L128
.L129:
	add	r4, r7, #0
	mov	r2, r9
	add	r3, r6, #0
	add	r6, r2, r7
.L136:
	ldrb	r1, [r2]
	ldrb	r0, [r3]
	strb	r0, [r2]
	add	r2, r2, #1
	strb	r1, [r3]
	add	r3, r3, #1
	sub	r4, r4, #1
	cmp	r4, #0
	bgt	.L136	@cond_branch
.L128:
	mov	r9, r6
.L126:
	mov	r6, sl
.L122:
	cmp	r6, r5
	bhi	.L143	@cond_branch
	add	r0, r6, #0
	ldr	r1, [sp]
	ldr	r2, [sp, #4]
	bl	_call_via_r2
	cmp	r0, #0
	ble	.L124	@cond_branch
	b	.L143
.L145:
	sub	r1, r5, r7
	mov	ip, r1
	cmp	r0, #0
	bne	.L147	@cond_branch
	mov	r2, #1
	str	r2, [sp, #16]
	ldr	r0, [sp, #12]
	cmp	r0, #0
	bne	.L148	@cond_branch
	ldr	r1, [r5]
	mov	r2, r8
	ldr	r0, [r2]
	str	r0, [r5]
	str	r1, [r2]
	sub	r5, r2, r7
	b	.L149
.L148:
	ldr	r0, [sp, #12]
	cmp	r0, #1
	bgt	.L150	@cond_branch
	lsr	r3, r7, #2
	add	r4, r5, #0
	mov	r2, r8
	sub	r5, r2, r7
.L151:
	ldr	r1, [r4]
	ldr	r0, [r2]
	stmia	r4!, {r0}
	stmia	r2!, {r1}
	sub	r3, r3, #1
	cmp	r3, #0
	bgt	.L151	@cond_branch
	b	.L149
.L150:
	add	r4, r7, #0
	add	r3, r5, #0
	mov	r2, r8
	sub	r5, r2, r7
.L157:
	ldrb	r1, [r3]
	ldrb	r0, [r2]
	strb	r0, [r3]
	add	r3, r3, #1
	strb	r1, [r2]
	add	r2, r2, #1
	sub	r4, r4, #1
	cmp	r4, #0
	bgt	.L157	@cond_branch
.L149:
	mov	r8, r5
.L147:
	mov	r5, ip
.L143:
	cmp	r6, r5
	bhi	.L240	@cond_branch
	add	r0, r5, #0
	ldr	r1, [sp]
	ldr	r2, [sp, #4]
	bl	_call_via_r2
	cmp	r0, #0
	bge	.L145	@cond_branch
	ldr	r0, [sp, #12]
	cmp	r0, #0
	beq	.LCB757
	b	.L165	@long jump
.LCB757:
	b	.L241
.L240:
	ldr	r1, [sp, #16]
	cmp	r1, #0
	bne	.L181	@cond_branch
	ldr	r5, [sp, #24]
	ldr	r2, [sp]
	ldr	r1, [sp, #28]
	add	r0, r2, r1
	cmp	r5, r0
	bcc	.LCB772
	b	.L26	@long jump
.LCB772:
.L185:
	add	r6, r5, #0
	add	r5, r5, r7
	mov	r8, r5
	b	.L186
.L189:
	ldr	r2, [sp, #12]
	cmp	r2, #0
	bne	.L191	@cond_branch
	ldr	r1, [r6]
	ldr	r0, [r5]
	str	r0, [r6]
	str	r1, [r5]
	b	.L188
.L191:
	ldr	r0, [sp, #12]
	cmp	r0, #1
	bgt	.L193	@cond_branch
	lsr	r2, r7, #2
	add	r4, r6, #0
	add	r3, r5, #0
.L194:
	ldr	r1, [r4]
	ldr	r0, [r3]
	stmia	r4!, {r0}
	stmia	r3!, {r1}
	sub	r2, r2, #1
	cmp	r2, #0
	bgt	.L194	@cond_branch
	b	.L188
.L193:
	add	r3, r7, #0
	add	r4, r6, #0
	add	r2, r5, #0
.L200:
	ldrb	r1, [r4]
	ldrb	r0, [r2]
	strb	r0, [r4]
	add	r4, r4, #1
	strb	r1, [r2]
	add	r2, r2, #1
	sub	r3, r3, #1
	cmp	r3, #0
	bgt	.L200	@cond_branch
.L188:
	add	r6, r5, #0
.L186:
	ldr	r1, [sp]
	cmp	r6, r1
	bls	.L184	@cond_branch
	sub	r4, r6, r7
	add	r0, r4, #0
	add	r1, r6, #0
	ldr	r2, [sp, #4]
	bl	_call_via_r2
	add	r5, r4, #0
	cmp	r0, #0
	bgt	.L189	@cond_branch
.L184:
	mov	r5, r8
	ldr	r1, [sp]
	ldr	r2, [sp, #28]
	add	r0, r1, r2
	cmp	r5, r0
	bcc	.L185	@cond_branch
	b	.L26
.L181:
	ldr	r0, [sp]
	ldr	r1, [sp, #28]
	add	r0, r0, r1
	mov	sl, r0
	mov	r2, r9
	ldr	r0, [sp]
	sub	r1, r2, r0
	sub	r0, r6, r2
	mov	r9, r0
	cmp	r0, r1
	ble	.L208	@cond_branch
	add	r0, r1, #0
.L208:
	mov	r1, r8
	sub	r5, r1, r5
	mov	r2, sl
	sub	r2, r2, r1
	mov	r8, r2
	cmp	r0, #0
	ble	.L209	@cond_branch
	sub	r1, r6, r0
	ldr	r2, [sp, #12]
	cmp	r2, #1
	bgt	.L210	@cond_branch
	lsr	r2, r0, #2
	ldr	r4, [sp]
	add	r3, r1, #0
.L211:
	ldr	r1, [r4]
	ldr	r0, [r3]
	stmia	r4!, {r0}
	stmia	r3!, {r1}
	sub	r2, r2, #1
	cmp	r2, #0
	bgt	.L211	@cond_branch
	b	.L209
.L210:
	add	r4, r0, #0
	ldr	r3, [sp]
	add	r2, r1, #0
.L217:
	ldrb	r1, [r3]
	ldrb	r0, [r2]
	strb	r0, [r3]
	add	r3, r3, #1
	strb	r1, [r2]
	add	r2, r2, #1
	sub	r4, r4, #1
	cmp	r4, #0
	bgt	.L217	@cond_branch
.L209:
	mov	r1, r8
	sub	r0, r1, r7
	cmp	r0, r5
	bls	.L223	@cond_branch
	add	r0, r5, #0
.L223:
	cmp	r0, #0
	ble	.L224	@cond_branch
	mov	r2, sl
	sub	r1, r2, r0
	ldr	r2, [sp, #12]
	cmp	r2, #1
	bgt	.L225	@cond_branch
	lsr	r2, r0, #2
	add	r4, r6, #0
	add	r3, r1, #0
.L226:
	ldr	r1, [r4]
	ldr	r0, [r3]
	stmia	r4!, {r0}
	stmia	r3!, {r1}
	sub	r2, r2, #1
	cmp	r2, #0
	bgt	.L226	@cond_branch
	b	.L224
.L225:
	add	r4, r0, #0
	add	r3, r6, #0
	add	r2, r1, #0
.L232:
	ldrb	r1, [r3]
	ldrb	r0, [r2]
	strb	r0, [r3]
	add	r3, r3, #1
	strb	r1, [r2]
	add	r2, r2, #1
	sub	r4, r4, #1
	cmp	r4, #0
	bgt	.L232	@cond_branch
.L224:
	mov	r0, r9
	cmp	r0, r7
	bls	.L238	@cond_branch
	add	r1, r7, #0
	bl	__udivsi3
	add	r1, r0, #0
	ldr	r0, [sp]
	add	r2, r7, #0
	ldr	r3, [sp, #4]
	bl	qsort
.L238:
	cmp	r5, r7
	bls	.L26	@cond_branch
	mov	r0, sl
	sub	r0, r0, r5
	str	r0, [sp]
	add	r0, r5, #0
	add	r1, r7, #0
	bl	__udivsi3
	mov	r9, r0
	b	.L27
.L26:
	add	sp, sp, #32
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7, pc}
.Lfe1:
	.size	 qsort,.Lfe1-qsort
.text
	.align	2, 0
