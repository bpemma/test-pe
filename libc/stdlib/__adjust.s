@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
.text
	.align	2, 0
	.globl	__adjust
	.type	 __adjust,function
	.thumb_func
__adjust:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	add	r6, r2, #0
	mov	r0, #154
	lsl	r0, r0, #1
	cmp	r6, r0
	ble	.L3	@cond_branch
	mov	r0, #34
	str	r0, [r4]
	ldr	r0, .L14
	ldr	r1, [r0, #4]		@ created by thumb_load_double_from_address
	ldr	r0, [r0]		@ created by thumb_load_double_from_address
	cmp	r3, #0
	beq	.L12	@cond_branch
	bl	__negdf2
	b	.L13
.L15:
	.align	2, 0
.L14:
	.word	__infinity
.L3:
	ldr	r0, .L16
	cmp	r6, r0
	bge	.L5	@cond_branch
	mov	r0, #34
	str	r0, [r4]
	ldr	r0, .L16+4		@ created by thumb_load_double_from_address
	ldr	r1, .L16+8		@ created by thumb_load_double_from_address
	b	.L12
.L17:
	.align	2, 0
.L16:
	.word	-308
	.long 0x0, 0x0	@ double 0.00000000000000000000e0
.L5:
	ldr	r4, [r1]		@ created by thumb_load_double_from_address
	ldr	r5, [r1, #4]		@ created by thumb_load_double_from_address
	cmp	r3, #0
	beq	.L7	@cond_branch
	add	r1, r5, #0
	add	r0, r4, #0
	bl	__negdf2
	add	r5, r1, #0
	add	r4, r0, #0
.L7:
	cmp	r6, #0
	bne	.L8	@cond_branch
	add	r1, r5, #0
	add	r0, r4, #0
	b	.L12
.L8:
	cmp	r6, #0
	bge	.L9	@cond_branch
	neg	r0, r6
	bl	__exp10
	add	r3, r1, #0
	add	r2, r0, #0
	add	r1, r5, #0
	add	r0, r4, #0
	bl	__divdf3
	b	.L13
.L9:
	add	r0, r6, #0
	bl	__exp10
	add	r3, r1, #0
	add	r2, r0, #0
	add	r1, r5, #0
	add	r0, r4, #0
	bl	__muldf3
.L13:
.L12:
	pop	{r4, r5, r6, pc}
.Lfe1:
	.size	 __adjust,.Lfe1-__adjust
.text
	.align	2, 0
