@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
.text
	.align	2, 0
	.globl	_wcstombs_r
	.type	 _wcstombs_r,function
	.thumb_func
_wcstombs_r:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-8
	mov	r9, r0
	mov	sl, r1
	add	r6, r2, #0
	add	r4, r3, #0
	mov	r5, sl
	mov	r8, r4
	cmp	r4, #0
	beq	.L4	@cond_branch
.L5:
	ldr	r2, [r6]
	mov	r0, r9
	mov	r1, sp
	ldr	r3, [sp, #40]
	bl	_wctomb_r
	add	r3, r0, #0
	mov	r0, #1
	neg	r0, r0
	cmp	r3, r0
	bne	.L6	@cond_branch
	add	r0, r3, #0
	b	.L16
.L6:
	add	r2, r4, #0
	cmp	r4, r3
	bls	.L7	@cond_branch
	add	r2, r3, #0
.L7:
	mov	r1, #0
	cmp	r1, r2
	bge	.L9	@cond_branch
.L11:
	mov	r7, sp
	add	r0, r7, r1
	ldrb	r0, [r0]
	strb	r0, [r5]
	add	r5, r5, #1
	add	r1, r1, #1
	cmp	r1, r2
	blt	.L11	@cond_branch
.L9:
	ldr	r0, [r6]
	cmp	r0, #0
	bne	.L13	@cond_branch
	mov	r1, sl
	sub	r0, r5, r1
	cmp	r4, r3
	bcc	.L16	@cond_branch
	sub	r0, r0, #1
	b	.L16
.L13:
	add	r6, r6, #4
	sub	r4, r4, r2
	cmp	r4, #0
	bne	.L5	@cond_branch
.L4:
	mov	r0, r8
.L16:
	add	sp, sp, #8
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7, pc}
.Lfe1:
	.size	 _wcstombs_r,.Lfe1-_wcstombs_r
.text
	.align	2, 0
