@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
.text
	.align	2, 0
	.globl	_findenv
	.type	 _findenv,function
	.thumb_func
_findenv:
	push	{r4, r5, r6, r7, lr}
	add	r6, r0, #0
	add	r7, r1, #0
	ldr	r0, .L20
	ldr	r1, [r0]
	cmp	r1, #0
	bne	.L3	@cond_branch
	b	.L10
.L21:
	.align	2, 0
.L20:
	.word	environ
.L17:
	ldr	r0, .L22
	ldr	r0, [r0]
	sub	r0, r4, r0
	asr	r0, r0, #2
	str	r0, [r7]
	add	r2, r2, #1
	add	r0, r2, #0
	b	.L16
.L23:
	.align	2, 0
.L22:
	.word	environ
.L3:
	add	r2, r6, #0
	mov	r5, #0
	b	.L18
.L6:
	add	r2, r2, #1
	add	r5, r5, #1
.L18:
	ldrb	r1, [r2]
	cmp	r1, #0
	beq	.L5	@cond_branch
	cmp	r1, #61
	bne	.L6	@cond_branch
.L5:
	ldr	r4, [r0]
	b	.L19
.L12:
	ldr	r0, [r4]
	add	r1, r6, #0
	add	r2, r5, #0
	bl	strncmp
	cmp	r0, #0
	bne	.L11	@cond_branch
	ldr	r0, [r4]
	add	r2, r0, r5
	ldrb	r0, [r2]
	cmp	r0, #61
	beq	.L17	@cond_branch
.L11:
	add	r4, r4, #4
.L19:
	ldr	r0, [r4]
	cmp	r0, #0
	bne	.L12	@cond_branch
.L10:
	mov	r0, #0
.L16:
	pop	{r4, r5, r6, r7, pc}
.Lfe1:
	.size	 _findenv,.Lfe1-_findenv
	.align	2, 0
	.globl	getenv
	.type	 getenv,function
	.thumb_func
getenv:
	push	{lr}
	add	sp, sp, #-4
	mov	r1, sp
	bl	_findenv
	add	sp, sp, #4
	pop	{pc}
.Lfe2:
	.size	 getenv,.Lfe2-getenv
.text
	.align	2, 0
