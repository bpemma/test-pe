@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section .rodata
	.align	2, 0
	.type	 one,object
	.size	 one,8
one:
	.long 0x3ff00000, 0x0	@ double 1.00000000000000000000e0
.text
	.align	2, 0
	.globl	modf
	.type	 modf,function
	.thumb_func
modf:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	sp, sp, #-40
	add	r5, r1, #0
	add	r4, r0, #0
	mov	ip, r2
	add	r2, r5, #0
	add	r1, r4, #0
	add	r3, r1, #0
	mov	r8, r2
	lsl	r0, r3, #1
	lsr	r0, r0, #21
	mov	r9, r0
	ldr	r0, .L66
	add	r0, r0, r9
	cmp	r0, #19
	bgt	.L8	@cond_branch
	cmp	r0, #0
	bge	.L9	@cond_branch
	mov	r0, #128
	lsl	r0, r0, #24
	add	r6, r3, #0
	and	r6, r6, r0
	mov	r7, #0
	mov	r0, ip
	str	r6, [r0]
	str	r7, [r0, #4]
	b	.L64
.L67:
	.align	2, 0
.L66:
	.word	-1023
.L9:
	ldr	r6, .L68
	asr	r6, r6, r0
	add	r0, r3, #0
	and	r0, r0, r6
	mov	r1, r8
	orr	r0, r0, r1
	cmp	r0, #0
	bne	.L16	@cond_branch
	mov	r0, ip
	str	r4, [r0]
	str	r5, [r0, #4]
	mov	r0, #128
	lsl	r0, r0, #24
	and	r0, r0, r4
	str	r0, [sp]
	mov	r1, #0
	str	r1, [sp, #4]
	ldr	r4, [sp]		@ created by thumb_load_double_from_address
	ldr	r5, [sp, #4]		@ created by thumb_load_double_from_address
	b	.L64
.L69:
	.align	2, 0
.L68:
	.word	1048575
.L16:
	bic	r3, r3, r6
	str	r3, [sp, #8]
	mov	r0, #0
	str	r0, [sp, #12]
	ldr	r2, [sp, #8]		@ created by thumb_load_double_from_address
	ldr	r3, [sp, #12]		@ created by thumb_load_double_from_address
	b	.L65
.L8:
	cmp	r0, #51
	ble	.L34	@cond_branch
	mov	r0, ip
	str	r4, [r0]
	str	r5, [r0, #4]
	mov	r0, #128
	lsl	r0, r0, #24
	and	r0, r0, r4
	str	r0, [sp, #16]
	mov	r1, #0
	str	r1, [sp, #20]
	ldr	r4, [sp, #16]		@ created by thumb_load_double_from_address
	ldr	r5, [sp, #20]		@ created by thumb_load_double_from_address
	b	.L64
.L34:
	ldr	r0, .L70
	add	r0, r0, r9
	mov	r6, #1
	neg	r6, r6
	lsr	r6, r6, r0
	mov	r0, r8
	and	r0, r0, r6
	cmp	r0, #0
	beq	.L46	@cond_branch
	str	r1, [sp, #32]
	mov	r0, r8
	bic	r0, r0, r6
	str	r0, [sp, #36]
	ldr	r2, [sp, #32]		@ created by thumb_load_double_from_address
	ldr	r3, [sp, #36]		@ created by thumb_load_double_from_address
.L65:
	mov	r1, ip
	str	r2, [r1]
	str	r3, [r1, #4]
	add	r1, r5, #0
	add	r0, r4, #0
	bl	__subdf3
	b	.L63
.L71:
	.align	2, 0
.L70:
	.word	-1043
.L46:
	mov	r0, ip
	str	r4, [r0]
	str	r5, [r0, #4]
	mov	r0, #128
	lsl	r0, r0, #24
	and	r0, r0, r4
	str	r0, [sp, #24]
	mov	r1, #0
	str	r1, [sp, #28]
	ldr	r4, [sp, #24]		@ created by thumb_load_double_from_address
	ldr	r5, [sp, #28]		@ created by thumb_load_double_from_address
.L64:
	add	r1, r5, #0
	add	r0, r4, #0
.L63:
	add	sp, sp, #40
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7, pc}
.Lfe1:
	.size	 modf,.Lfe1-modf
.text
	.align	2, 0
