@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section .rodata
	.align	2, 0
	.type	 two54,object
	.size	 two54,8
two54:
	.long 0x43500000, 0x0	@ double 1.80143985094819840000e16
.text
	.align	2, 0
	.globl	frexp
	.type	 frexp,function
	.thumb_func
frexp:
	push	{r4, r5, r6, r7, lr}
	add	r5, r1, #0
	add	r4, r0, #0
	add	r6, r2, #0
	add	r3, r0, #0
	add	r2, r1, #0
	ldr	r7, .L22
	add	r1, r3, #0
	and	r1, r1, r7
	mov	r0, #0
	str	r0, [r6]
	ldr	r0, .L22+4
	cmp	r1, r0
	bgt	.L9	@cond_branch
	orr	r2, r2, r1
	cmp	r2, #0
	bne	.L8	@cond_branch
.L9:
	add	r1, r5, #0
	add	r0, r4, #0
	b	.L21
.L23:
	.align	2, 0
.L22:
	.word	2147483647
	.word	2146435071
.L8:
	ldr	r0, .L24
	cmp	r1, r0
	bgt	.L10	@cond_branch
	ldr	r2, .L24+4		@ created by thumb_load_double_from_address
	ldr	r3, .L24+8		@ created by thumb_load_double_from_address
	add	r1, r5, #0
	add	r0, r4, #0
	bl	__muldf3
	add	r5, r1, #0
	add	r4, r0, #0
	add	r3, r4, #0
	add	r1, r3, #0
	and	r1, r1, r7
	mov	r0, #54
	neg	r0, r0
	str	r0, [r6]
.L10:
	ldr	r0, [r6]
	ldr	r2, .L24+12
	add	r0, r0, r2
	asr	r1, r1, #20
	add	r0, r0, r1
	str	r0, [r6]
	ldr	r2, .L24+16
	and	r2, r2, r3
	ldr	r3, .L24+20
	add	r1, r5, #0
	add	r0, r4, #0
	add	r0, r2, #0
	orr	r0, r0, r3
	add	r5, r1, #0
	add	r4, r0, #0
.L21:
	pop	{r4, r5, r6, r7, pc}
.L25:
	.align	2, 0
.L24:
	.word	1048575
	.long 0x43500000, 0x0	@ double 1.80143985094819840000e16
	.word	-1022
	.word	-2146435073
	.word	1071644672
.Lfe1:
	.size	 frexp,.Lfe1-frexp
.text
	.align	2, 0
