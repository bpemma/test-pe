@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section .rodata
	.align	2, 0
	.type	 two54,object
	.size	 two54,8
two54:
	.long 0x43500000, 0x0	@ double 1.80143985094819840000e16
	.align	2, 0
	.type	 twom54,object
	.size	 twom54,8
twom54:
	.long 0x3c900000, 0x0	@ double 5.55111512312578270212e-17
	.align	2, 0
	.type	 huge,object
	.size	 huge,8
huge:
	.long 0x7e37e43c, 0x8800759c	@ double 1.00000000000000005250e300
	.align	2, 0
	.type	 tiny,object
	.size	 tiny,8
tiny:
	.long 0x1a56e1f, 0xc2f8f359	@ double 1.00000000000000002506e-300
.text
	.align	2, 0
	.globl	scalbn
	.type	 scalbn,function
	.thumb_func
scalbn:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	r7, r1, #0
	add	r6, r0, #0
	add	r5, r2, #0
	add	r3, r0, #0
	ldr	r0, .L36
	mov	r8, r0
	add	r0, r3, #0
	mov	r2, r8
	and	r0, r0, r2
	asr	r4, r0, #20
	cmp	r4, #0
	bne	.L8	@cond_branch
	ldr	r0, .L36+4
	and	r3, r3, r0
	orr	r1, r1, r3
	cmp	r1, #0
	bne	.L9	@cond_branch
	add	r1, r7, #0
	add	r0, r6, #0
	b	.L32
.L37:
	.align	2, 0
.L36:
	.word	2146435072
	.word	2147483647
.L9:
	ldr	r3, .L38+4		@ created by thumb_load_double_from_address
	ldr	r2, .L38		@ created by thumb_load_double_from_address
	add	r1, r7, #0
	add	r0, r6, #0
	bl	__muldf3
	add	r7, r1, #0
	add	r6, r0, #0
	add	r3, r6, #0
	add	r0, r3, #0
	mov	r1, r8
	and	r0, r0, r1
	asr	r0, r0, #20
	add	r4, r0, #0
	sub	r4, r4, #54
	ldr	r0, .L38+8
	cmp	r5, r0
	bge	.L8	@cond_branch
	ldr	r2, .L38+12		@ created by thumb_load_double_from_address
	ldr	r3, .L38+16		@ created by thumb_load_double_from_address
	add	r1, r7, #0
	add	r0, r6, #0
	b	.L34
.L39:
	.align	2, 0
.L38:
	.long 0x43500000, 0x0	@ double 1.80143985094819840000e16
	.word	-50000
	.long 0x1a56e1f, 0xc2f8f359	@ double 1.00000000000000002506e-300
.L8:
	ldr	r0, .L40
	cmp	r4, r0
	bne	.L16	@cond_branch
	add	r1, r7, #0
	add	r0, r6, #0
	add	r3, r7, #0
	add	r2, r6, #0
	bl	__adddf3
	b	.L35
.L41:
	.align	2, 0
.L40:
	.word	2047
.L16:
	add	r4, r4, r5
	ldr	r0, .L42
	cmp	r4, r0
	ble	.L17	@cond_branch
	ldr	r4, .L42+4		@ created by thumb_load_double_from_address
	ldr	r5, .L42+8		@ created by thumb_load_double_from_address
	add	r1, r5, #0
	add	r0, r4, #0
	add	r3, r7, #0
	add	r2, r6, #0
	bl	copysign
	add	r3, r5, #0
	add	r2, r4, #0
	b	.L34
.L43:
	.align	2, 0
.L42:
	.word	2046
	.long 0x7e37e43c, 0x8800759c	@ double 1.00000000000000005250e300
.L17:
	cmp	r4, #0
	ble	.L18	@cond_branch
	add	r1, r7, #0
	add	r0, r6, #0
	ldr	r2, .L44
	and	r3, r3, r2
	lsl	r2, r4, #20
	add	r0, r3, #0
	orr	r0, r0, r2
	add	r7, r1, #0
	add	r6, r0, #0
	b	.L32
.L45:
	.align	2, 0
.L44:
	.word	-2146435073
.L18:
	mov	r0, #54
	neg	r0, r0
	cmp	r4, r0
	bgt	.L24	@cond_branch
	ldr	r0, .L46
	cmp	r5, r0
	ble	.L25	@cond_branch
	ldr	r4, .L46+4		@ created by thumb_load_double_from_address
	ldr	r5, .L46+8		@ created by thumb_load_double_from_address
	add	r1, r5, #0
	add	r0, r4, #0
	add	r3, r7, #0
	add	r2, r6, #0
	bl	copysign
	add	r3, r5, #0
	add	r2, r4, #0
	b	.L34
.L47:
	.align	2, 0
.L46:
	.word	50000
	.long 0x7e37e43c, 0x8800759c	@ double 1.00000000000000005250e300
.L25:
	ldr	r5, .L48+4		@ created by thumb_load_double_from_address
	ldr	r4, .L48		@ created by thumb_load_double_from_address
	add	r1, r5, #0
	add	r0, r4, #0
	add	r3, r7, #0
	add	r2, r6, #0
	bl	copysign
	add	r3, r5, #0
	add	r2, r4, #0
	b	.L34
.L49:
	.align	2, 0
.L48:
	.long 0x1a56e1f, 0xc2f8f359	@ double 1.00000000000000002506e-300
.L24:
	add	r4, r4, #54
	add	r1, r7, #0
	add	r0, r6, #0
	ldr	r2, .L50
	and	r3, r3, r2
	lsl	r2, r4, #20
	add	r0, r3, #0
	orr	r0, r0, r2
	add	r7, r1, #0
	add	r6, r0, #0
	ldr	r2, .L50+4		@ created by thumb_load_double_from_address
	ldr	r3, .L50+8		@ created by thumb_load_double_from_address
.L34:
	bl	__muldf3
.L35:
.L32:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7, pc}
.L51:
	.align	2, 0
.L50:
	.word	-2146435073
	.long 0x3c900000, 0x0	@ double 5.55111512312578270212e-17
.Lfe1:
	.size	 scalbn,.Lfe1-scalbn
.text
	.align	2, 0
